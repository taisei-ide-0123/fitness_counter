{"ast":null,"code":"var _jsxFileName = \"/Users/idetaisei/fitness_counter/client/src/sketches/ArmCurl.js\";\nimport React, { Component } from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport ml5 from 'ml5';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from '../actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ArmCurl extends Component {\n  render() {\n    const arm_curl = p => {\n      let video;\n      let poseNet;\n      let count = 0;\n      let countCanvas;\n      let should_count = true;\n      let noseX = 0;\n      let noseY = 0;\n      let lShoulderX = 0;\n      let lShoulderY = 0;\n      let rShoulderX = 0;\n      let rShoulderY = 0;\n      let lElbowX = 0;\n      let lElbowY = 0;\n      let rElbowX = 0;\n      let rElbowY = 0;\n      let lWristX = 0;\n      let lWristY = 0;\n      let rWristX = 0;\n      let rWristY = 0;\n      let lHipX = 0;\n      let lHipY = 0;\n      let rHipX = 0;\n      let rHipY = 0;\n      let lKneeX = 0;\n      let lKneeY = 0;\n      let rKneeX = 0;\n      let rKneeY = 0;\n      let lAnkleX = 0;\n      let lAnkleY = 0;\n      let rAnkleX = 0;\n      let rAnkleY = 0; // text(s, x, y, w, h)\n      // 最初の1回だけ実装される処理\n\n      p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight);\n        countCanvas = p.createGraphics(p.windowWidth, p.windowHeight * 0.1);\n        video = p.createCapture(p.VIDEO);\n        video.size(p.windowWidth, p.windowHeight);\n        video.hide(); // 映像を一つにする\n\n        poseNet = ml5.poseNet(video, p.modelReady);\n        poseNet.on('pose', p.gotPoses); // ポーズが検出された時に結果を返すイベント\n      };\n\n      p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\n      };\n\n      p.gotPoses = poses => {\n        // console.log(poses)\n        if (poses.length > 0) {\n          let nX = poses[0].pose.keypoints[0].position.x;\n          let nY = poses[0].pose.keypoints[0].position.y;\n          let leftShoulderX = poses[0].pose.keypoints[5].position.x;\n          let leftShoulderY = poses[0].pose.keypoints[5].position.y;\n          let rightShoulderX = poses[0].pose.keypoints[6].position.x;\n          let rightShoulderY = poses[0].pose.keypoints[6].position.y;\n          let leftElbowX = poses[0].pose.keypoints[7].position.x;\n          let leftElbowY = poses[0].pose.keypoints[7].position.y;\n          let rightElbowX = poses[0].pose.keypoints[8].position.x;\n          let rightElbowY = poses[0].pose.keypoints[8].position.y;\n          let leftWristX = poses[0].pose.keypoints[9].position.x;\n          let leftWristY = poses[0].pose.keypoints[9].position.y;\n          let rightWristX = poses[0].pose.keypoints[10].position.x;\n          let rightWristY = poses[0].pose.keypoints[10].position.y;\n          let leftHipX = poses[0].pose.keypoints[11].position.x;\n          let leftHipY = poses[0].pose.keypoints[11].position.y;\n          let rightHipX = poses[0].pose.keypoints[12].position.x;\n          let rightHipY = poses[0].pose.keypoints[12].position.y;\n          let leftKneeX = poses[0].pose.keypoints[13].position.x;\n          let leftKneeY = poses[0].pose.keypoints[13].position.y;\n          let rightKneeX = poses[0].pose.keypoints[14].position.x;\n          let rightKneeY = poses[0].pose.keypoints[14].position.y;\n          let leftAnkleX = poses[0].pose.keypoints[15].position.x;\n          let leftAnkleY = poses[0].pose.keypoints[15].position.y;\n          let rightAnkleX = poses[0].pose.keypoints[16].position.x;\n          let rightAnkleY = poses[0].pose.keypoints[16].position.y;\n          noseX = p.lerp(noseX, nX, 0.5);\n          noseY = p.lerp(noseY, nY, 0.5);\n          lShoulderX = p.lerp(lShoulderX, leftShoulderX, 0.5);\n          lShoulderY = p.lerp(lShoulderY, leftShoulderY, 0.5);\n          rShoulderX = p.lerp(rShoulderX, rightShoulderX, 0.5);\n          rShoulderY = p.lerp(rShoulderY, rightShoulderY, 0.5);\n          lElbowX = p.lerp(lElbowX, leftElbowX, 0.5);\n          lElbowY = p.lerp(lElbowY, leftElbowY, 0.5);\n          rElbowX = p.lerp(rElbowX, rightElbowX, 0.5);\n          rElbowY = p.lerp(rElbowY, rightElbowY, 0.5);\n          lWristX = p.lerp(lWristX, leftWristX, 0.5);\n          lWristY = p.lerp(lWristY, leftWristY, 0.5);\n          rWristX = p.lerp(rWristX, rightWristX, 0.5);\n          rWristY = p.lerp(rWristY, rightWristY, 0.5);\n          lHipX = p.lerp(lHipX, leftHipX, 0.5);\n          lHipY = p.lerp(lHipY, leftHipY, 0.5);\n          rHipX = p.lerp(rHipX, rightHipX, 0.5);\n          rHipY = p.lerp(rHipY, rightHipY, 0.5);\n          lKneeX = p.lerp(lKneeX, leftKneeX, 0.5);\n          lKneeY = p.lerp(lKneeY, leftKneeY, 0.5);\n          rKneeX = p.lerp(rKneeX, rightKneeX, 0.5);\n          rKneeY = p.lerp(rKneeY, rightKneeY, 0.5);\n          lAnkleX = p.lerp(lAnkleX, leftAnkleX, 0.5);\n          lAnkleY = p.lerp(lAnkleY, leftAnkleY, 0.5);\n          rAnkleX = p.lerp(rAnkleX, rightAnkleX, 0.5);\n          rAnkleY = p.lerp(rAnkleY, rightAnkleY, 0.5); // 座標\n          // (leftShoulderX, leftShoulderY)\n          // (leftElbowX, leftElbowY)\n          // (leftWristX, leftWristY)\n\n          let lSE = new Array(2);\n          lSE[0] = leftShoulderX - leftElbowX; // ba[0]\n\n          lSE[1] = leftShoulderY - leftElbowY; // ba[1]\n\n          let lWE = new Array(2);\n          lWE[0] = leftWristX - leftElbowX; // bc[0]\n\n          lWE[1] = leftWristY - leftElbowY; // bc[1]\n\n          let lSEWE = lSE[0] * lWE[0] + lSE[1] * lWE[1];\n          let lSEn = lSE[0] * lSE[0] + lSE[1] * lSE[1];\n          let lWEn = lWE[0] * lWE[0] + lWE[1] * lWE[1];\n          let l_radian = Math.acos(lSEWE / Math.sqrt(lSEn * lWEn));\n          let l_angle = l_radian * 180 / Math.PI; // 結果（ラジアンから角度に変換）\n          // 座標\n          // (rightShoulderX, rightShoulderY)\n          // (rightElbowX, rightElbowY)\n          // (rightWristX, rightWristY)\n\n          let rSE = new Array(2);\n          rSE[0] = rightShoulderX - rightElbowX; // ba[0]\n\n          rSE[1] = rightShoulderY - rightElbowY; // ba[1]\n\n          let rWE = new Array(2);\n          rWE[0] = rightWristX - rightElbowX; // bc[0]\n\n          rWE[1] = rightWristY - rightElbowY; // bc[1]\n\n          let rSEWE = rSE[0] * rWE[0] + rSE[1] * rWE[1];\n          let rSEn = rSE[0] * rSE[0] + rSE[1] * rSE[1];\n          let rWEn = rWE[0] * rWE[0] + rWE[1] * rWE[1];\n          let r_radian = Math.acos(rSEWE / Math.sqrt(rSEn * rWEn));\n          let r_angle = r_radian * 180 / Math.PI; // 結果（ラジアンから角度に変換）\n          // console.log(l_angle)\n          // console.log(r_angle)\n\n          if (l_angle >= 170 || r_angle >= 170) {\n            should_count = true;\n          } else if (l_angle <= 40 && should_count || r_angle <= 40 && should_count) {\n            count += 1;\n            should_count = false;\n          }\n        }\n      };\n\n      p.modelReady = () => {// console.log('model ready')\n      }; // setup後に繰り返し実行される処理（フレーム単位）\n\n\n      p.draw = () => {\n        p.background(220); // カメラからの映像は一旦getしてイメージとして扱う方が軽量\n\n        let img = video.get();\n        p.image(img, 0, 0, p.width, p.height);\n        p.fill(245, 222, 179);\n        p.ellipse(noseX, noseY, 20);\n        p.ellipse(lShoulderX, lShoulderY, 20);\n        p.ellipse(rShoulderX, rShoulderY, 20);\n        p.ellipse(lElbowX, lElbowY, 20);\n        p.ellipse(rElbowX, rElbowY, 20);\n        p.ellipse(lWristX, lWristY, 20);\n        p.ellipse(rWristX, rWristY, 20);\n        p.ellipse(lHipX, lHipY, 20);\n        p.ellipse(rHipX, rHipY, 20);\n        p.ellipse(lKneeX, lKneeY, 20);\n        p.ellipse(rKneeX, rKneeY, 20);\n        p.ellipse(lAnkleX, lAnkleY, 20);\n        p.ellipse(rAnkleX, rAnkleY, 20);\n        p.strokeWeight(5);\n        p.stroke(255, 127, 80);\n        p.line(lShoulderX, lShoulderY, rShoulderX, rShoulderY);\n        p.line(lShoulderX, lShoulderY, lElbowX, lElbowY);\n        p.line(lElbowX, lElbowY, lWristX, lWristY);\n        p.line(rShoulderX, rShoulderY, rElbowX, rElbowY);\n        p.line(rElbowX, rElbowY, rWristX, rWristY);\n        p.line(lShoulderX, lShoulderY, lHipX, lHipY);\n        p.line(lHipX, lHipY, lKneeX, lKneeY);\n        p.line(lKneeX, lKneeY, lAnkleX, lAnkleY);\n        p.line(rShoulderX, rShoulderY, rHipX, rHipY);\n        p.line(rHipX, rHipY, rKneeX, rKneeY);\n        p.line(rKneeX, rKneeY, rAnkleX, rAnkleY);\n        p.line(lHipX, lHipY, rHipX, rHipY); // header\n\n        countCanvas.background(0, 0, 0, 0.8);\n        countCanvas.noStroke();\n        p.image(countCanvas, 0, 0, 400); // count\n\n        p.fill(255, 127, 80);\n        p.text('count : ' + count, 50, 60);\n        p.textSize(60);\n      };\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(P5Wrapper, {\n        sketch: arm_curl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nArmCurl.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentUser\n})(ArmCurl);","map":{"version":3,"sources":["/Users/idetaisei/fitness_counter/client/src/sketches/ArmCurl.js"],"names":["React","Component","P5Wrapper","ml5","axios","PropTypes","connect","setCurrentUser","ArmCurl","render","arm_curl","p","video","poseNet","count","countCanvas","should_count","noseX","noseY","lShoulderX","lShoulderY","rShoulderX","rShoulderY","lElbowX","lElbowY","rElbowX","rElbowY","lWristX","lWristY","rWristX","rWristY","lHipX","lHipY","rHipX","rHipY","lKneeX","lKneeY","rKneeX","rKneeY","lAnkleX","lAnkleY","rAnkleX","rAnkleY","setup","createCanvas","windowWidth","windowHeight","createGraphics","createCapture","VIDEO","size","hide","modelReady","on","gotPoses","windowResized","resizeCanvas","poses","length","nX","pose","keypoints","position","x","nY","y","leftShoulderX","leftShoulderY","rightShoulderX","rightShoulderY","leftElbowX","leftElbowY","rightElbowX","rightElbowY","leftWristX","leftWristY","rightWristX","rightWristY","leftHipX","leftHipY","rightHipX","rightHipY","leftKneeX","leftKneeY","rightKneeX","rightKneeY","leftAnkleX","leftAnkleY","rightAnkleX","rightAnkleY","lerp","lSE","Array","lWE","lSEWE","lSEn","lWEn","l_radian","Math","acos","sqrt","l_angle","PI","rSE","rWE","rSEWE","rSEn","rWEn","r_radian","r_angle","draw","background","img","get","image","width","height","fill","ellipse","strokeWeight","stroke","line","noStroke","text","textSize","propTypes","func","isRequired","auth","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport P5Wrapper from 'react-p5-wrapper'\nimport ml5 from 'ml5'\nimport axios from 'axios'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { setCurrentUser } from '../actions/authActions'\n\nclass ArmCurl extends Component {\n  render() {\n    const arm_curl = (p) => {\n      let video\n      let poseNet\n      let count = 0\n      let countCanvas\n      let should_count = true\n      let noseX = 0\n      let noseY = 0\n      let lShoulderX = 0\n      let lShoulderY = 0\n      let rShoulderX = 0\n      let rShoulderY = 0\n      let lElbowX = 0\n      let lElbowY = 0\n      let rElbowX = 0\n      let rElbowY = 0\n      let lWristX = 0\n      let lWristY = 0\n      let rWristX = 0\n      let rWristY = 0\n      let lHipX = 0\n      let lHipY = 0\n      let rHipX = 0\n      let rHipY = 0\n      let lKneeX = 0\n      let lKneeY = 0\n      let rKneeX = 0\n      let rKneeY = 0\n      let lAnkleX = 0\n      let lAnkleY = 0\n      let rAnkleX = 0\n      let rAnkleY = 0\n\n      // text(s, x, y, w, h)\n\n      // 最初の1回だけ実装される処理\n      p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight)\n        countCanvas = p.createGraphics(p.windowWidth, p.windowHeight * 0.1)\n        video = p.createCapture(p.VIDEO)\n        video.size(p.windowWidth, p.windowHeight)\n        video.hide() // 映像を一つにする\n        poseNet = ml5.poseNet(video, p.modelReady)\n        poseNet.on('pose', p.gotPoses) // ポーズが検出された時に結果を返すイベント\n      }\n\n      p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight)\n      }\n\n      p.gotPoses = (poses) => {\n        // console.log(poses)\n        if (poses.length > 0) {\n          let nX = poses[0].pose.keypoints[0].position.x\n          let nY = poses[0].pose.keypoints[0].position.y\n          let leftShoulderX = poses[0].pose.keypoints[5].position.x\n          let leftShoulderY = poses[0].pose.keypoints[5].position.y\n          let rightShoulderX = poses[0].pose.keypoints[6].position.x\n          let rightShoulderY = poses[0].pose.keypoints[6].position.y\n          let leftElbowX = poses[0].pose.keypoints[7].position.x\n          let leftElbowY = poses[0].pose.keypoints[7].position.y\n          let rightElbowX = poses[0].pose.keypoints[8].position.x\n          let rightElbowY = poses[0].pose.keypoints[8].position.y\n          let leftWristX = poses[0].pose.keypoints[9].position.x\n          let leftWristY = poses[0].pose.keypoints[9].position.y\n          let rightWristX = poses[0].pose.keypoints[10].position.x\n          let rightWristY = poses[0].pose.keypoints[10].position.y\n          let leftHipX = poses[0].pose.keypoints[11].position.x\n          let leftHipY = poses[0].pose.keypoints[11].position.y\n          let rightHipX = poses[0].pose.keypoints[12].position.x\n          let rightHipY = poses[0].pose.keypoints[12].position.y\n          let leftKneeX = poses[0].pose.keypoints[13].position.x\n          let leftKneeY = poses[0].pose.keypoints[13].position.y\n          let rightKneeX = poses[0].pose.keypoints[14].position.x\n          let rightKneeY = poses[0].pose.keypoints[14].position.y\n          let leftAnkleX = poses[0].pose.keypoints[15].position.x\n          let leftAnkleY = poses[0].pose.keypoints[15].position.y\n          let rightAnkleX = poses[0].pose.keypoints[16].position.x\n          let rightAnkleY = poses[0].pose.keypoints[16].position.y\n\n          noseX = p.lerp(noseX, nX, 0.5)\n          noseY = p.lerp(noseY, nY, 0.5)\n          lShoulderX = p.lerp(lShoulderX, leftShoulderX, 0.5)\n          lShoulderY = p.lerp(lShoulderY, leftShoulderY, 0.5)\n          rShoulderX = p.lerp(rShoulderX, rightShoulderX, 0.5)\n          rShoulderY = p.lerp(rShoulderY, rightShoulderY, 0.5)\n          lElbowX = p.lerp(lElbowX, leftElbowX, 0.5)\n          lElbowY = p.lerp(lElbowY, leftElbowY, 0.5)\n          rElbowX = p.lerp(rElbowX, rightElbowX, 0.5)\n          rElbowY = p.lerp(rElbowY, rightElbowY, 0.5)\n          lWristX = p.lerp(lWristX, leftWristX, 0.5)\n          lWristY = p.lerp(lWristY, leftWristY, 0.5)\n          rWristX = p.lerp(rWristX, rightWristX, 0.5)\n          rWristY = p.lerp(rWristY, rightWristY, 0.5)\n          lHipX = p.lerp(lHipX, leftHipX, 0.5)\n          lHipY = p.lerp(lHipY, leftHipY, 0.5)\n          rHipX = p.lerp(rHipX, rightHipX, 0.5)\n          rHipY = p.lerp(rHipY, rightHipY, 0.5)\n          lKneeX = p.lerp(lKneeX, leftKneeX, 0.5)\n          lKneeY = p.lerp(lKneeY, leftKneeY, 0.5)\n          rKneeX = p.lerp(rKneeX, rightKneeX, 0.5)\n          rKneeY = p.lerp(rKneeY, rightKneeY, 0.5)\n          lAnkleX = p.lerp(lAnkleX, leftAnkleX, 0.5)\n          lAnkleY = p.lerp(lAnkleY, leftAnkleY, 0.5)\n          rAnkleX = p.lerp(rAnkleX, rightAnkleX, 0.5)\n          rAnkleY = p.lerp(rAnkleY, rightAnkleY, 0.5)\n\n          // 座標\n          // (leftShoulderX, leftShoulderY)\n          // (leftElbowX, leftElbowY)\n          // (leftWristX, leftWristY)\n\n          let lSE = new Array(2)\n          lSE[0] = leftShoulderX - leftElbowX // ba[0]\n          lSE[1] = leftShoulderY - leftElbowY // ba[1]\n          let lWE = new Array(2)\n          lWE[0] = leftWristX - leftElbowX // bc[0]\n          lWE[1] = leftWristY - leftElbowY // bc[1]\n\n          let lSEWE = lSE[0] * lWE[0] + lSE[1] * lWE[1]\n          let lSEn = lSE[0] * lSE[0] + lSE[1] * lSE[1]\n          let lWEn = lWE[0] * lWE[0] + lWE[1] * lWE[1]\n          let l_radian = Math.acos(lSEWE / Math.sqrt(lSEn * lWEn))\n          let l_angle = (l_radian * 180) / Math.PI // 結果（ラジアンから角度に変換）\n\n          // 座標\n          // (rightShoulderX, rightShoulderY)\n          // (rightElbowX, rightElbowY)\n          // (rightWristX, rightWristY)\n\n          let rSE = new Array(2)\n          rSE[0] = rightShoulderX - rightElbowX // ba[0]\n          rSE[1] = rightShoulderY - rightElbowY // ba[1]\n          let rWE = new Array(2)\n          rWE[0] = rightWristX - rightElbowX // bc[0]\n          rWE[1] = rightWristY - rightElbowY // bc[1]\n\n          let rSEWE = rSE[0] * rWE[0] + rSE[1] * rWE[1]\n          let rSEn = rSE[0] * rSE[0] + rSE[1] * rSE[1]\n          let rWEn = rWE[0] * rWE[0] + rWE[1] * rWE[1]\n          let r_radian = Math.acos(rSEWE / Math.sqrt(rSEn * rWEn))\n          let r_angle = (r_radian * 180) / Math.PI // 結果（ラジアンから角度に変換）\n\n          // console.log(l_angle)\n          // console.log(r_angle)\n          if (l_angle >= 170 || r_angle >= 170) {\n            should_count = true\n          } else if (\n            (l_angle <= 40 && should_count) ||\n            (r_angle <= 40 && should_count)\n          ) {\n            count += 1\n            should_count = false\n          }\n        }\n      }\n\n      p.modelReady = () => {\n        // console.log('model ready')\n      }\n\n      // setup後に繰り返し実行される処理（フレーム単位）\n      p.draw = () => {\n        p.background(220)\n\n        // カメラからの映像は一旦getしてイメージとして扱う方が軽量\n        let img = video.get()\n        p.image(img, 0, 0, p.width, p.height)\n\n        p.fill(245, 222, 179)\n        p.ellipse(noseX, noseY, 20)\n        p.ellipse(lShoulderX, lShoulderY, 20)\n        p.ellipse(rShoulderX, rShoulderY, 20)\n        p.ellipse(lElbowX, lElbowY, 20)\n        p.ellipse(rElbowX, rElbowY, 20)\n        p.ellipse(lWristX, lWristY, 20)\n        p.ellipse(rWristX, rWristY, 20)\n        p.ellipse(lHipX, lHipY, 20)\n        p.ellipse(rHipX, rHipY, 20)\n        p.ellipse(lKneeX, lKneeY, 20)\n        p.ellipse(rKneeX, rKneeY, 20)\n        p.ellipse(lAnkleX, lAnkleY, 20)\n        p.ellipse(rAnkleX, rAnkleY, 20)\n\n        p.strokeWeight(5)\n        p.stroke(255, 127, 80)\n        p.line(lShoulderX, lShoulderY, rShoulderX, rShoulderY)\n        p.line(lShoulderX, lShoulderY, lElbowX, lElbowY)\n        p.line(lElbowX, lElbowY, lWristX, lWristY)\n        p.line(rShoulderX, rShoulderY, rElbowX, rElbowY)\n        p.line(rElbowX, rElbowY, rWristX, rWristY)\n        p.line(lShoulderX, lShoulderY, lHipX, lHipY)\n        p.line(lHipX, lHipY, lKneeX, lKneeY)\n        p.line(lKneeX, lKneeY, lAnkleX, lAnkleY)\n        p.line(rShoulderX, rShoulderY, rHipX, rHipY)\n        p.line(rHipX, rHipY, rKneeX, rKneeY)\n        p.line(rKneeX, rKneeY, rAnkleX, rAnkleY)\n        p.line(lHipX, lHipY, rHipX, rHipY)\n\n        // header\n        countCanvas.background(0, 0, 0, 0.8)\n        countCanvas.noStroke()\n        p.image(countCanvas, 0, 0, 400)\n\n        // count\n        p.fill(255, 127, 80)\n        p.text('count : ' + count, 50, 60)\n        p.textSize(60)\n      }\n    }\n\n    return (\n      <div>\n        <P5Wrapper sketch={arm_curl} />\n      </div>\n    )\n  }\n}\n\nArmCurl.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { setCurrentUser })(ArmCurl)\n"]},"metadata":{},"sourceType":"module"}