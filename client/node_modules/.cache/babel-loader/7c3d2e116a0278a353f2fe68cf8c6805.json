{"ast":null,"code":"var _jsxFileName = \"/Users/idetaisei/fitness_counter/client/src/sketches/Squat.js\";\nimport React, { Component } from 'react';\nimport ml5 from 'ml5';\nimport P5Wrapper from 'react-p5-wrapper';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from '../actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Squat extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      user\n    } = this.props.auth; // console.log(user)\n\n    this.state = {\n      user: user.id,\n      event: 'squat',\n      count: '',\n      total_squat_count: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/users/' + this.props.auth.user.id).then(response => {\n      this.setState({\n        total_squat_count: response.data.total_squat_count\n      }); // console.log(response.data)\n      // console.log(this.state.total_squat_count)\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const squat = p => {\n      let video;\n      let poseNet;\n      let saveButton;\n      let cancellButton;\n      let count = 0;\n      let countCanvas;\n      let should_count = true;\n      let noseX = 0;\n      let noseY = 0;\n      let lShoulderX = 0;\n      let lShoulderY = 0;\n      let rShoulderX = 0;\n      let rShoulderY = 0;\n      let lElbowX = 0;\n      let lElbowY = 0;\n      let rElbowX = 0;\n      let rElbowY = 0;\n      let lWristX = 0;\n      let lWristY = 0;\n      let rWristX = 0;\n      let rWristY = 0;\n      let lHipX = 0;\n      let lHipY = 0;\n      let rHipX = 0;\n      let rHipY = 0;\n      let lKneeX = 0;\n      let lKneeY = 0;\n      let rKneeX = 0;\n      let rKneeY = 0;\n      let lAnkleX = 0;\n      let lAnkleY = 0;\n      let rAnkleX = 0;\n      let rAnkleY = 0; // text(s, x, y, w, h)\n      // 最初の1回だけ実装される処理\n\n      p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight);\n        countCanvas = p.createGraphics(p.windowWidth, p.windowHeight * 0.1);\n        video = p.createCapture(p.VIDEO);\n        video.size(p.windowWidth, p.windowHeight);\n        video.hide(); // 映像を一つにする\n\n        poseNet = ml5.poseNet(video, p.modelReady);\n        poseNet.on('pose', p.gotPoses); // ポーズが検出された時に結果を返すイベント\n\n        saveButton = p.createButton('save');\n        saveButton.position(p.windowWidth - 110, 5);\n        saveButton.mousePressed(p.save);\n        saveButton.style('width', '90px');\n        saveButton.style('height', '90px');\n        saveButton.style('color', '#fff');\n        saveButton.style('font-size', '25px');\n        saveButton.style('box-shadow', '2px 2px #000');\n        saveButton.style('border-radius', '50px');\n        saveButton.style('background', '#1da1f2');\n        saveButton.style('border', 'none');\n        cancellButton = p.createButton('cancell');\n        cancellButton.position(p.windowWidth - 220, 5);\n        cancellButton.mousePressed(p.cancell);\n        cancellButton.style('width', '90px');\n        cancellButton.style('height', '90px');\n        cancellButton.style('color', '#fff');\n        cancellButton.style('font-size', '25px');\n        cancellButton.style('box-shadow', '2px 2px #000');\n        cancellButton.style('border-radius', '50px');\n        cancellButton.style('background', '#ff0027');\n        cancellButton.style('border', 'none');\n      };\n\n      p.save = e => {\n        // console.log(count)\n        const current_count = {\n          user: this.state.user,\n          event: this.state.event,\n          count: count\n        };\n        const squat_count = {\n          total_squat_count: this.state.total_squat_count + count\n        };\n        console.log(squat_count); // console.log(current_count)\n\n        axios.post('/api/counts/add/' + this.state.user, current_count).then(res => console.log(res.data));\n        axios.put('/api/users/total/squat/count/' + this.state.user, squat_count).then(res => console.log(res.data));\n        window.location = '/menu';\n      };\n\n      p.cancell = e => {\n        window.location = '/menu';\n      };\n\n      p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\n      };\n\n      p.gotPoses = poses => {\n        // console.log(poses)\n        if (poses.length > 0) {\n          let nX = poses[0].pose.keypoints[0].position.x;\n          let nY = poses[0].pose.keypoints[0].position.y;\n          let leftShoulderX = poses[0].pose.keypoints[5].position.x;\n          let leftShoulderY = poses[0].pose.keypoints[5].position.y;\n          let rightShoulderX = poses[0].pose.keypoints[6].position.x;\n          let rightShoulderY = poses[0].pose.keypoints[6].position.y;\n          let leftElbowX = poses[0].pose.keypoints[7].position.x;\n          let leftElbowY = poses[0].pose.keypoints[7].position.y;\n          let rightElbowX = poses[0].pose.keypoints[8].position.x;\n          let rightElbowY = poses[0].pose.keypoints[8].position.y;\n          let leftWristX = poses[0].pose.keypoints[9].position.x;\n          let leftWristY = poses[0].pose.keypoints[9].position.y;\n          let rightWristX = poses[0].pose.keypoints[10].position.x;\n          let rightWristY = poses[0].pose.keypoints[10].position.y;\n          let leftHipX = poses[0].pose.keypoints[11].position.x;\n          let leftHipY = poses[0].pose.keypoints[11].position.y;\n          let rightHipX = poses[0].pose.keypoints[12].position.x;\n          let rightHipY = poses[0].pose.keypoints[12].position.y;\n          let leftKneeX = poses[0].pose.keypoints[13].position.x;\n          let leftKneeY = poses[0].pose.keypoints[13].position.y;\n          let rightKneeX = poses[0].pose.keypoints[14].position.x;\n          let rightKneeY = poses[0].pose.keypoints[14].position.y;\n          let leftAnkleX = poses[0].pose.keypoints[15].position.x;\n          let leftAnkleY = poses[0].pose.keypoints[15].position.y;\n          let rightAnkleX = poses[0].pose.keypoints[16].position.x;\n          let rightAnkleY = poses[0].pose.keypoints[16].position.y;\n          noseX = p.lerp(noseX, nX, 0.5);\n          noseY = p.lerp(noseY, nY, 0.5);\n          lShoulderX = p.lerp(lShoulderX, leftShoulderX, 0.5);\n          lShoulderY = p.lerp(lShoulderY, leftShoulderY, 0.5);\n          rShoulderX = p.lerp(rShoulderX, rightShoulderX, 0.5);\n          rShoulderY = p.lerp(rShoulderY, rightShoulderY, 0.5);\n          lElbowX = p.lerp(lElbowX, leftElbowX, 0.5);\n          lElbowY = p.lerp(lElbowY, leftElbowY, 0.5);\n          rElbowX = p.lerp(rElbowX, rightElbowX, 0.5);\n          rElbowY = p.lerp(rElbowY, rightElbowY, 0.5);\n          lWristX = p.lerp(lWristX, leftWristX, 0.5);\n          lWristY = p.lerp(lWristY, leftWristY, 0.5);\n          rWristX = p.lerp(rWristX, rightWristX, 0.5);\n          rWristY = p.lerp(rWristY, rightWristY, 0.5);\n          lHipX = p.lerp(lHipX, leftHipX, 0.5);\n          lHipY = p.lerp(lHipY, leftHipY, 0.5);\n          rHipX = p.lerp(rHipX, rightHipX, 0.5);\n          rHipY = p.lerp(rHipY, rightHipY, 0.5);\n          lKneeX = p.lerp(lKneeX, leftKneeX, 0.5);\n          lKneeY = p.lerp(lKneeY, leftKneeY, 0.5);\n          rKneeX = p.lerp(rKneeX, rightKneeX, 0.5);\n          rKneeY = p.lerp(rKneeY, rightKneeY, 0.5);\n          lAnkleX = p.lerp(lAnkleX, leftAnkleX, 0.5);\n          lAnkleY = p.lerp(lAnkleY, leftAnkleY, 0.5);\n          rAnkleX = p.lerp(rAnkleX, rightAnkleX, 0.5);\n          rAnkleY = p.lerp(rAnkleY, rightAnkleY, 0.5); // console.log(nY)\n          // 座標\n          // (leftHipX, leftHipY)\n          // (leftKneeX, leftKneeY)\n          // (leftAnkleX, leftAnkleY)\n\n          let lHK = new Array(2);\n          lHK[0] = leftHipX - leftKneeX; // ba[0]\n\n          lHK[1] = leftHipY - leftKneeY; // ba[1]\n\n          let lAK = new Array(2);\n          lAK[0] = leftAnkleX - leftKneeX; // bc[0]\n\n          lAK[1] = leftAnkleY - leftKneeY; // bc[1]\n\n          let lHKAK = lHK[0] * lAK[0] + lHK[1] * lAK[1];\n          let lHKn = lHK[0] * lHK[0] + lHK[1] * lHK[1];\n          let lAKn = lAK[0] * lAK[0] + lAK[1] * lAK[1];\n          let radian = Math.acos(lHKAK / Math.sqrt(lHKn * lAKn));\n          let angle = radian * 180 / Math.PI; // 結果（ラジアンから角度に変換）\n          // console.log(angle)\n\n          if (angle >= 170) {\n            should_count = true;\n          } else if (angle <= 140 && should_count) {\n            count += 1;\n            should_count = false;\n            return {\n              count: count\n            };\n          }\n        }\n      };\n\n      p.modelReady = () => {// console.log('model ready')\n      }; // setup後に繰り返し実行される処理（フレーム単位）\n\n\n      p.draw = () => {\n        p.background(220); // カメラからの映像は一旦getしてイメージとして扱う方が軽量\n\n        let img = video.get();\n        p.image(img, 0, 0, p.width, p.height);\n        p.fill(245, 222, 179);\n        p.ellipse(noseX, noseY, 20);\n        p.ellipse(lShoulderX, lShoulderY, 20);\n        p.ellipse(rShoulderX, rShoulderY, 20);\n        p.ellipse(lElbowX, lElbowY, 20);\n        p.ellipse(rElbowX, rElbowY, 20);\n        p.ellipse(lWristX, lWristY, 20);\n        p.ellipse(rWristX, rWristY, 20);\n        p.ellipse(lHipX, lHipY, 20);\n        p.ellipse(rHipX, rHipY, 20);\n        p.ellipse(lKneeX, lKneeY, 20);\n        p.ellipse(rKneeX, rKneeY, 20);\n        p.ellipse(lAnkleX, lAnkleY, 20);\n        p.ellipse(rAnkleX, rAnkleY, 20);\n        p.strokeWeight(5);\n        p.stroke(255, 127, 80);\n        p.line(lShoulderX, lShoulderY, rShoulderX, rShoulderY);\n        p.line(lShoulderX, lShoulderY, lElbowX, lElbowY);\n        p.line(lElbowX, lElbowY, lWristX, lWristY);\n        p.line(rShoulderX, rShoulderY, rElbowX, rElbowY);\n        p.line(rElbowX, rElbowY, rWristX, rWristY);\n        p.line(lShoulderX, lShoulderY, lHipX, lHipY);\n        p.line(lHipX, lHipY, lKneeX, lKneeY);\n        p.line(lKneeX, lKneeY, lAnkleX, lAnkleY);\n        p.line(rShoulderX, rShoulderY, rHipX, rHipY);\n        p.line(rHipX, rHipY, rKneeX, rKneeY);\n        p.line(rKneeX, rKneeY, rAnkleX, rAnkleY);\n        p.line(lHipX, lHipY, rHipX, rHipY); // header\n\n        countCanvas.background(0, 0, 0, 0.8);\n        countCanvas.noStroke();\n        p.image(countCanvas, 0, 0, 400); // count\n\n        p.fill(255, 127, 80);\n        p.text('count : ' + count, 50, 60);\n        p.textSize(60);\n      };\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(P5Wrapper, {\n        sketch: squat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSquat.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentUser\n})(Squat);","map":{"version":3,"sources":["/Users/idetaisei/fitness_counter/client/src/sketches/Squat.js"],"names":["React","Component","ml5","P5Wrapper","axios","PropTypes","connect","setCurrentUser","Squat","constructor","props","user","auth","state","id","event","count","total_squat_count","componentDidMount","get","then","response","setState","data","catch","error","console","log","render","squat","p","video","poseNet","saveButton","cancellButton","countCanvas","should_count","noseX","noseY","lShoulderX","lShoulderY","rShoulderX","rShoulderY","lElbowX","lElbowY","rElbowX","rElbowY","lWristX","lWristY","rWristX","rWristY","lHipX","lHipY","rHipX","rHipY","lKneeX","lKneeY","rKneeX","rKneeY","lAnkleX","lAnkleY","rAnkleX","rAnkleY","setup","createCanvas","windowWidth","windowHeight","createGraphics","createCapture","VIDEO","size","hide","modelReady","on","gotPoses","createButton","position","mousePressed","save","style","cancell","e","current_count","squat_count","post","res","put","window","location","windowResized","resizeCanvas","poses","length","nX","pose","keypoints","x","nY","y","leftShoulderX","leftShoulderY","rightShoulderX","rightShoulderY","leftElbowX","leftElbowY","rightElbowX","rightElbowY","leftWristX","leftWristY","rightWristX","rightWristY","leftHipX","leftHipY","rightHipX","rightHipY","leftKneeX","leftKneeY","rightKneeX","rightKneeY","leftAnkleX","leftAnkleY","rightAnkleX","rightAnkleY","lerp","lHK","Array","lAK","lHKAK","lHKn","lAKn","radian","Math","acos","sqrt","angle","PI","draw","background","img","image","width","height","fill","ellipse","strokeWeight","stroke","line","noStroke","text","textSize","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ml5 from 'ml5'\nimport P5Wrapper from 'react-p5-wrapper'\nimport axios from 'axios'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { setCurrentUser } from '../actions/authActions'\n\nclass Squat extends Component {\n  constructor(props) {\n    super(props)\n    const { user } = this.props.auth\n    // console.log(user)\n    this.state = {\n      user: user.id,\n      event: 'squat',\n      count: '',\n      total_squat_count: '',\n    }\n  }\n\n  componentDidMount() {\n    axios\n      .get('/api/users/' + this.props.auth.user.id)\n      .then((response) => {\n        this.setState({ total_squat_count: response.data.total_squat_count })\n        // console.log(response.data)\n        // console.log(this.state.total_squat_count)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  render() {\n    const squat = (p) => {\n      let video\n      let poseNet\n      let saveButton\n      let cancellButton\n      let count = 0\n      let countCanvas\n      let should_count = true\n      let noseX = 0\n      let noseY = 0\n      let lShoulderX = 0\n      let lShoulderY = 0\n      let rShoulderX = 0\n      let rShoulderY = 0\n      let lElbowX = 0\n      let lElbowY = 0\n      let rElbowX = 0\n      let rElbowY = 0\n      let lWristX = 0\n      let lWristY = 0\n      let rWristX = 0\n      let rWristY = 0\n      let lHipX = 0\n      let lHipY = 0\n      let rHipX = 0\n      let rHipY = 0\n      let lKneeX = 0\n      let lKneeY = 0\n      let rKneeX = 0\n      let rKneeY = 0\n      let lAnkleX = 0\n      let lAnkleY = 0\n      let rAnkleX = 0\n      let rAnkleY = 0\n\n      // text(s, x, y, w, h)\n\n      // 最初の1回だけ実装される処理\n      p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight)\n        countCanvas = p.createGraphics(p.windowWidth, p.windowHeight * 0.1)\n        video = p.createCapture(p.VIDEO)\n        video.size(p.windowWidth, p.windowHeight)\n        video.hide() // 映像を一つにする\n        poseNet = ml5.poseNet(video, p.modelReady)\n        poseNet.on('pose', p.gotPoses) // ポーズが検出された時に結果を返すイベント\n\n        saveButton = p.createButton('save')\n        saveButton.position(p.windowWidth - 110, 5)\n        saveButton.mousePressed(p.save)\n        saveButton.style('width', '90px')\n        saveButton.style('height', '90px')\n        saveButton.style('color', '#fff')\n        saveButton.style('font-size', '25px')\n        saveButton.style('box-shadow', '2px 2px #000')\n        saveButton.style('border-radius', '50px')\n        saveButton.style('background', '#1da1f2')\n        saveButton.style('border', 'none')\n\n        cancellButton = p.createButton('cancell')\n        cancellButton.position(p.windowWidth - 220, 5)\n        cancellButton.mousePressed(p.cancell)\n        cancellButton.style('width', '90px')\n        cancellButton.style('height', '90px')\n        cancellButton.style('color', '#fff')\n        cancellButton.style('font-size', '25px')\n        cancellButton.style('box-shadow', '2px 2px #000')\n        cancellButton.style('border-radius', '50px')\n        cancellButton.style('background', '#ff0027')\n        cancellButton.style('border', 'none')\n      }\n\n      p.save = (e) => {\n        // console.log(count)\n        const current_count = {\n          user: this.state.user,\n          event: this.state.event,\n          count: count,\n        }\n\n        const squat_count = {\n          total_squat_count: this.state.total_squat_count + count,\n        }\n        console.log(squat_count)\n        // console.log(current_count)\n\n        axios\n          .post('/api/counts/add/' + this.state.user, current_count)\n          .then((res) => console.log(res.data))\n\n        axios\n          .put('/api/users/total/squat/count/' + this.state.user, squat_count)\n          .then((res) => console.log(res.data))\n\n        window.location = '/menu'\n      }\n\n      p.cancell = (e) => {\n        window.location = '/menu'\n      }\n\n      p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight)\n      }\n\n      p.gotPoses = (poses) => {\n        // console.log(poses)\n        if (poses.length > 0) {\n          let nX = poses[0].pose.keypoints[0].position.x\n          let nY = poses[0].pose.keypoints[0].position.y\n          let leftShoulderX = poses[0].pose.keypoints[5].position.x\n          let leftShoulderY = poses[0].pose.keypoints[5].position.y\n          let rightShoulderX = poses[0].pose.keypoints[6].position.x\n          let rightShoulderY = poses[0].pose.keypoints[6].position.y\n          let leftElbowX = poses[0].pose.keypoints[7].position.x\n          let leftElbowY = poses[0].pose.keypoints[7].position.y\n          let rightElbowX = poses[0].pose.keypoints[8].position.x\n          let rightElbowY = poses[0].pose.keypoints[8].position.y\n          let leftWristX = poses[0].pose.keypoints[9].position.x\n          let leftWristY = poses[0].pose.keypoints[9].position.y\n          let rightWristX = poses[0].pose.keypoints[10].position.x\n          let rightWristY = poses[0].pose.keypoints[10].position.y\n          let leftHipX = poses[0].pose.keypoints[11].position.x\n          let leftHipY = poses[0].pose.keypoints[11].position.y\n          let rightHipX = poses[0].pose.keypoints[12].position.x\n          let rightHipY = poses[0].pose.keypoints[12].position.y\n          let leftKneeX = poses[0].pose.keypoints[13].position.x\n          let leftKneeY = poses[0].pose.keypoints[13].position.y\n          let rightKneeX = poses[0].pose.keypoints[14].position.x\n          let rightKneeY = poses[0].pose.keypoints[14].position.y\n          let leftAnkleX = poses[0].pose.keypoints[15].position.x\n          let leftAnkleY = poses[0].pose.keypoints[15].position.y\n          let rightAnkleX = poses[0].pose.keypoints[16].position.x\n          let rightAnkleY = poses[0].pose.keypoints[16].position.y\n\n          noseX = p.lerp(noseX, nX, 0.5)\n          noseY = p.lerp(noseY, nY, 0.5)\n          lShoulderX = p.lerp(lShoulderX, leftShoulderX, 0.5)\n          lShoulderY = p.lerp(lShoulderY, leftShoulderY, 0.5)\n          rShoulderX = p.lerp(rShoulderX, rightShoulderX, 0.5)\n          rShoulderY = p.lerp(rShoulderY, rightShoulderY, 0.5)\n          lElbowX = p.lerp(lElbowX, leftElbowX, 0.5)\n          lElbowY = p.lerp(lElbowY, leftElbowY, 0.5)\n          rElbowX = p.lerp(rElbowX, rightElbowX, 0.5)\n          rElbowY = p.lerp(rElbowY, rightElbowY, 0.5)\n          lWristX = p.lerp(lWristX, leftWristX, 0.5)\n          lWristY = p.lerp(lWristY, leftWristY, 0.5)\n          rWristX = p.lerp(rWristX, rightWristX, 0.5)\n          rWristY = p.lerp(rWristY, rightWristY, 0.5)\n          lHipX = p.lerp(lHipX, leftHipX, 0.5)\n          lHipY = p.lerp(lHipY, leftHipY, 0.5)\n          rHipX = p.lerp(rHipX, rightHipX, 0.5)\n          rHipY = p.lerp(rHipY, rightHipY, 0.5)\n          lKneeX = p.lerp(lKneeX, leftKneeX, 0.5)\n          lKneeY = p.lerp(lKneeY, leftKneeY, 0.5)\n          rKneeX = p.lerp(rKneeX, rightKneeX, 0.5)\n          rKneeY = p.lerp(rKneeY, rightKneeY, 0.5)\n          lAnkleX = p.lerp(lAnkleX, leftAnkleX, 0.5)\n          lAnkleY = p.lerp(lAnkleY, leftAnkleY, 0.5)\n          rAnkleX = p.lerp(rAnkleX, rightAnkleX, 0.5)\n          rAnkleY = p.lerp(rAnkleY, rightAnkleY, 0.5)\n\n          // console.log(nY)\n          // 座標\n          // (leftHipX, leftHipY)\n          // (leftKneeX, leftKneeY)\n          // (leftAnkleX, leftAnkleY)\n\n          let lHK = new Array(2)\n          lHK[0] = leftHipX - leftKneeX // ba[0]\n          lHK[1] = leftHipY - leftKneeY // ba[1]\n          let lAK = new Array(2)\n          lAK[0] = leftAnkleX - leftKneeX // bc[0]\n          lAK[1] = leftAnkleY - leftKneeY // bc[1]\n\n          let lHKAK = lHK[0] * lAK[0] + lHK[1] * lAK[1]\n          let lHKn = lHK[0] * lHK[0] + lHK[1] * lHK[1]\n          let lAKn = lAK[0] * lAK[0] + lAK[1] * lAK[1]\n          let radian = Math.acos(lHKAK / Math.sqrt(lHKn * lAKn))\n          let angle = (radian * 180) / Math.PI // 結果（ラジアンから角度に変換）\n\n          // console.log(angle)\n          if (angle >= 170) {\n            should_count = true\n          } else if (angle <= 140 && should_count) {\n            count += 1\n            should_count = false\n\n            return { count: count }\n          }\n        }\n      }\n\n      p.modelReady = () => {\n        // console.log('model ready')\n      }\n\n      // setup後に繰り返し実行される処理（フレーム単位）\n      p.draw = () => {\n        p.background(220)\n\n        // カメラからの映像は一旦getしてイメージとして扱う方が軽量\n        let img = video.get()\n        p.image(img, 0, 0, p.width, p.height)\n\n        p.fill(245, 222, 179)\n        p.ellipse(noseX, noseY, 20)\n        p.ellipse(lShoulderX, lShoulderY, 20)\n        p.ellipse(rShoulderX, rShoulderY, 20)\n        p.ellipse(lElbowX, lElbowY, 20)\n        p.ellipse(rElbowX, rElbowY, 20)\n        p.ellipse(lWristX, lWristY, 20)\n        p.ellipse(rWristX, rWristY, 20)\n        p.ellipse(lHipX, lHipY, 20)\n        p.ellipse(rHipX, rHipY, 20)\n        p.ellipse(lKneeX, lKneeY, 20)\n        p.ellipse(rKneeX, rKneeY, 20)\n        p.ellipse(lAnkleX, lAnkleY, 20)\n        p.ellipse(rAnkleX, rAnkleY, 20)\n\n        p.strokeWeight(5)\n        p.stroke(255, 127, 80)\n        p.line(lShoulderX, lShoulderY, rShoulderX, rShoulderY)\n        p.line(lShoulderX, lShoulderY, lElbowX, lElbowY)\n        p.line(lElbowX, lElbowY, lWristX, lWristY)\n        p.line(rShoulderX, rShoulderY, rElbowX, rElbowY)\n        p.line(rElbowX, rElbowY, rWristX, rWristY)\n        p.line(lShoulderX, lShoulderY, lHipX, lHipY)\n        p.line(lHipX, lHipY, lKneeX, lKneeY)\n        p.line(lKneeX, lKneeY, lAnkleX, lAnkleY)\n        p.line(rShoulderX, rShoulderY, rHipX, rHipY)\n        p.line(rHipX, rHipY, rKneeX, rKneeY)\n        p.line(rKneeX, rKneeY, rAnkleX, rAnkleY)\n        p.line(lHipX, lHipY, rHipX, rHipY)\n\n        // header\n        countCanvas.background(0, 0, 0, 0.8)\n        countCanvas.noStroke()\n        p.image(countCanvas, 0, 0, 400)\n\n        // count\n        p.fill(255, 127, 80)\n        p.text('count : ' + count, 50, 60)\n        p.textSize(60)\n      }\n    }\n\n    return (\n      <div>\n        <P5Wrapper sketch={squat} />\n      </div>\n    )\n  }\n}\n\nSquat.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { setCurrentUser })(Squat)\n"]},"metadata":{},"sourceType":"module"}