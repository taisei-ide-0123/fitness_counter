{"ast":null,"code":"var _jsxFileName = \"/Users/idetaisei/fitness_counter/client/src/sketches/PushUp.js\";\nimport React, { Component } from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport ml5 from 'ml5';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from '../actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PushUp extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      user\n    } = this.props.auth; // console.log(user)\n\n    this.state = {\n      user: user.id,\n      event: 'push up',\n      count: ''\n    }; // console.log(this.state)\n  }\n\n  render() {\n    const push_up = p => {\n      let video;\n      let poseNet;\n      let count = 0;\n      let countCanvas;\n      let should_count = true;\n      let noseX = 0;\n      let noseY = 0;\n      let lShoulderX = 0;\n      let lShoulderY = 0;\n      let rShoulderX = 0;\n      let rShoulderY = 0;\n      let lElbowX = 0;\n      let lElbowY = 0;\n      let rElbowX = 0;\n      let rElbowY = 0;\n      let lWristX = 0;\n      let lWristY = 0;\n      let rWristX = 0;\n      let rWristY = 0;\n      let lHipX = 0;\n      let lHipY = 0;\n      let rHipX = 0;\n      let rHipY = 0;\n      let lKneeX = 0;\n      let lKneeY = 0;\n      let rKneeX = 0;\n      let rKneeY = 0;\n      let lAnkleX = 0;\n      let lAnkleY = 0;\n      let rAnkleX = 0;\n      let rAnkleY = 0; // text(s, x, y, w, h)\n      // 最初の1回だけ実装される処理\n\n      p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight);\n        countCanvas = p.createGraphics(p.windowWidth, p.windowHeight * 0.1);\n        video = p.createCapture(p.VIDEO);\n        video.size(p.windowWidth, p.windowHeight);\n        video.hide(); // 映像を一つにする\n\n        poseNet = ml5.poseNet(video, p.modelReady);\n        poseNet.on('pose', p.gotPoses); // ポーズが検出された時に結果を返すイベント\n      };\n\n      p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\n      };\n\n      p.gotPoses = poses => {\n        // console.log(poses)\n        if (poses.length > 0) {\n          let nX = poses[0].pose.keypoints[0].position.x;\n          let nY = poses[0].pose.keypoints[0].position.y;\n          let leftShoulderX = poses[0].pose.keypoints[5].position.x;\n          let leftShoulderY = poses[0].pose.keypoints[5].position.y;\n          let rightShoulderX = poses[0].pose.keypoints[6].position.x;\n          let rightShoulderY = poses[0].pose.keypoints[6].position.y;\n          let leftElbowX = poses[0].pose.keypoints[7].position.x;\n          let leftElbowY = poses[0].pose.keypoints[7].position.y;\n          let rightElbowX = poses[0].pose.keypoints[8].position.x;\n          let rightElbowY = poses[0].pose.keypoints[8].position.y;\n          let leftWristX = poses[0].pose.keypoints[9].position.x;\n          let leftWristY = poses[0].pose.keypoints[9].position.y;\n          let rightWristX = poses[0].pose.keypoints[10].position.x;\n          let rightWristY = poses[0].pose.keypoints[10].position.y;\n          let leftHipX = poses[0].pose.keypoints[11].position.x;\n          let leftHipY = poses[0].pose.keypoints[11].position.y;\n          let rightHipX = poses[0].pose.keypoints[12].position.x;\n          let rightHipY = poses[0].pose.keypoints[12].position.y;\n          let leftKneeX = poses[0].pose.keypoints[13].position.x;\n          let leftKneeY = poses[0].pose.keypoints[13].position.y;\n          let rightKneeX = poses[0].pose.keypoints[14].position.x;\n          let rightKneeY = poses[0].pose.keypoints[14].position.y;\n          let leftAnkleX = poses[0].pose.keypoints[15].position.x;\n          let leftAnkleY = poses[0].pose.keypoints[15].position.y;\n          let rightAnkleX = poses[0].pose.keypoints[16].position.x;\n          let rightAnkleY = poses[0].pose.keypoints[16].position.y;\n          noseX = p.lerp(noseX, nX, 0.5);\n          noseY = p.lerp(noseY, nY, 0.5);\n          lShoulderX = p.lerp(lShoulderX, leftShoulderX, 0.5);\n          lShoulderY = p.lerp(lShoulderY, leftShoulderY, 0.5);\n          rShoulderX = p.lerp(rShoulderX, rightShoulderX, 0.5);\n          rShoulderY = p.lerp(rShoulderY, rightShoulderY, 0.5);\n          lElbowX = p.lerp(lElbowX, leftElbowX, 0.5);\n          lElbowY = p.lerp(lElbowY, leftElbowY, 0.5);\n          rElbowX = p.lerp(rElbowX, rightElbowX, 0.5);\n          rElbowY = p.lerp(rElbowY, rightElbowY, 0.5);\n          lWristX = p.lerp(lWristX, leftWristX, 0.5);\n          lWristY = p.lerp(lWristY, leftWristY, 0.5);\n          rWristX = p.lerp(rWristX, rightWristX, 0.5);\n          rWristY = p.lerp(rWristY, rightWristY, 0.5);\n          lHipX = p.lerp(lHipX, leftHipX, 0.5);\n          lHipY = p.lerp(lHipY, leftHipY, 0.5);\n          rHipX = p.lerp(rHipX, rightHipX, 0.5);\n          rHipY = p.lerp(rHipY, rightHipY, 0.5);\n          lKneeX = p.lerp(lKneeX, leftKneeX, 0.5);\n          lKneeY = p.lerp(lKneeY, leftKneeY, 0.5);\n          rKneeX = p.lerp(rKneeX, rightKneeX, 0.5);\n          rKneeY = p.lerp(rKneeY, rightKneeY, 0.5);\n          lAnkleX = p.lerp(lAnkleX, leftAnkleX, 0.5);\n          lAnkleY = p.lerp(lAnkleY, leftAnkleY, 0.5);\n          rAnkleX = p.lerp(rAnkleX, rightAnkleX, 0.5);\n          rAnkleY = p.lerp(rAnkleY, rightAnkleY, 0.5); // 座標\n          // (leftShoulderX, leftShoulderY)\n          // (leftElbowX, leftElbowY)\n          // (leftWristX, leftWristY)\n\n          let lSE = new Array(2);\n          lSE[0] = leftShoulderX - leftElbowX;\n          lSE[1] = leftShoulderY - leftShoulderY;\n          let lWE = new Array(2);\n          lWE[0] = leftWristX - leftElbowX;\n          lWE[1] = leftWristY - leftElbowY;\n          let lSEWE = lSE[0] * lWE[0] + lSE[1] * lWE[1];\n          let lSEn = lSE[0] * lSE[0] + lSE[1] * lSE[1];\n          let lWEn = lWE[0] * lWE[0] + lWE[1] * lWE[1];\n          let radian = Math.acos(lSEWE / Math.sqrt(lSEn * lWEn));\n          let angle = radian * 180 / Math.PI; // 結果（ラジアンから角度に変換）\n\n          console.log(angle);\n\n          if (angle >= 100) {\n            should_count = true;\n          } else if (angle <= 70 && should_count) {\n            count += 1;\n            should_count = false;\n          }\n        }\n      };\n\n      p.modelReady = () => {// console.log('model ready')\n      }; // setup後に繰り返し実行される処理（フレーム単位）\n\n\n      p.draw = () => {\n        p.background(220); // カメラからの映像は一旦getしてイメージとして扱う方が軽量\n\n        let img = video.get();\n        p.image(img, 0, 0, p.width, p.height);\n        p.fill(245, 222, 179);\n        p.ellipse(noseX, noseY, 20);\n        p.ellipse(lShoulderX, lShoulderY, 20);\n        p.ellipse(rShoulderX, rShoulderY, 20);\n        p.ellipse(lElbowX, lElbowY, 20);\n        p.ellipse(rElbowX, rElbowY, 20);\n        p.ellipse(lWristX, lWristY, 20);\n        p.ellipse(rWristX, rWristY, 20);\n        p.ellipse(lHipX, lHipY, 20);\n        p.ellipse(rHipX, rHipY, 20);\n        p.ellipse(lKneeX, lKneeY, 20);\n        p.ellipse(rKneeX, rKneeY, 20);\n        p.ellipse(lAnkleX, lAnkleY, 20);\n        p.ellipse(rAnkleX, rAnkleY, 20);\n        p.strokeWeight(5);\n        p.stroke(255, 127, 80);\n        p.line(lShoulderX, lShoulderY, rShoulderX, rShoulderY);\n        p.line(lShoulderX, lShoulderY, lElbowX, lElbowY);\n        p.line(lElbowX, lElbowY, lWristX, lWristY);\n        p.line(rShoulderX, rShoulderY, rElbowX, rElbowY);\n        p.line(rElbowX, rElbowY, rWristX, rWristY);\n        p.line(lShoulderX, lShoulderY, lHipX, lHipY);\n        p.line(lHipX, lHipY, lKneeX, lKneeY);\n        p.line(lKneeX, lKneeY, lAnkleX, lAnkleY);\n        p.line(rShoulderX, rShoulderY, rHipX, rHipY);\n        p.line(rHipX, rHipY, rKneeX, rKneeY);\n        p.line(rKneeX, rKneeY, rAnkleX, rAnkleY);\n        p.line(lHipX, lHipY, rHipX, rHipY); // header\n\n        countCanvas.background(0, 0, 0, 0.8);\n        countCanvas.noStroke();\n        p.image(countCanvas, 0, 0, 400); // count\n\n        p.fill(255, 127, 80);\n        p.text('count : ' + count, 50, 60);\n        p.textSize(60);\n      };\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(P5Wrapper, {\n        sketch: push_up\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPushUp.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentUser\n})(PushUp);","map":{"version":3,"sources":["/Users/idetaisei/fitness_counter/client/src/sketches/PushUp.js"],"names":["React","Component","P5Wrapper","ml5","axios","PropTypes","connect","setCurrentUser","PushUp","constructor","props","user","auth","state","id","event","count","render","push_up","p","video","poseNet","countCanvas","should_count","noseX","noseY","lShoulderX","lShoulderY","rShoulderX","rShoulderY","lElbowX","lElbowY","rElbowX","rElbowY","lWristX","lWristY","rWristX","rWristY","lHipX","lHipY","rHipX","rHipY","lKneeX","lKneeY","rKneeX","rKneeY","lAnkleX","lAnkleY","rAnkleX","rAnkleY","setup","createCanvas","windowWidth","windowHeight","createGraphics","createCapture","VIDEO","size","hide","modelReady","on","gotPoses","windowResized","resizeCanvas","poses","length","nX","pose","keypoints","position","x","nY","y","leftShoulderX","leftShoulderY","rightShoulderX","rightShoulderY","leftElbowX","leftElbowY","rightElbowX","rightElbowY","leftWristX","leftWristY","rightWristX","rightWristY","leftHipX","leftHipY","rightHipX","rightHipY","leftKneeX","leftKneeY","rightKneeX","rightKneeY","leftAnkleX","leftAnkleY","rightAnkleX","rightAnkleY","lerp","lSE","Array","lWE","lSEWE","lSEn","lWEn","radian","Math","acos","sqrt","angle","PI","console","log","draw","background","img","get","image","width","height","fill","ellipse","strokeWeight","stroke","line","noStroke","text","textSize","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport P5Wrapper from 'react-p5-wrapper'\nimport ml5 from 'ml5'\nimport axios from 'axios'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { setCurrentUser } from '../actions/authActions'\n\nclass PushUp extends Component {\n  constructor(props) {\n    super(props)\n    const { user } = this.props.auth\n    // console.log(user)\n    this.state = {\n      user: user.id,\n      event: 'push up',\n      count: '',\n    }\n    // console.log(this.state)\n  }\n  render() {\n    const push_up = (p) => {\n      let video\n      let poseNet\n      let count = 0\n      let countCanvas\n      let should_count = true\n      let noseX = 0\n      let noseY = 0\n      let lShoulderX = 0\n      let lShoulderY = 0\n      let rShoulderX = 0\n      let rShoulderY = 0\n      let lElbowX = 0\n      let lElbowY = 0\n      let rElbowX = 0\n      let rElbowY = 0\n      let lWristX = 0\n      let lWristY = 0\n      let rWristX = 0\n      let rWristY = 0\n      let lHipX = 0\n      let lHipY = 0\n      let rHipX = 0\n      let rHipY = 0\n      let lKneeX = 0\n      let lKneeY = 0\n      let rKneeX = 0\n      let rKneeY = 0\n      let lAnkleX = 0\n      let lAnkleY = 0\n      let rAnkleX = 0\n      let rAnkleY = 0\n\n      // text(s, x, y, w, h)\n\n      // 最初の1回だけ実装される処理\n      p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight)\n        countCanvas = p.createGraphics(p.windowWidth, p.windowHeight * 0.1)\n        video = p.createCapture(p.VIDEO)\n        video.size(p.windowWidth, p.windowHeight)\n        video.hide() // 映像を一つにする\n        poseNet = ml5.poseNet(video, p.modelReady)\n        poseNet.on('pose', p.gotPoses) // ポーズが検出された時に結果を返すイベント\n      }\n\n      p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight)\n      }\n\n      p.gotPoses = (poses) => {\n        // console.log(poses)\n        if (poses.length > 0) {\n          let nX = poses[0].pose.keypoints[0].position.x\n          let nY = poses[0].pose.keypoints[0].position.y\n          let leftShoulderX = poses[0].pose.keypoints[5].position.x\n          let leftShoulderY = poses[0].pose.keypoints[5].position.y\n          let rightShoulderX = poses[0].pose.keypoints[6].position.x\n          let rightShoulderY = poses[0].pose.keypoints[6].position.y\n          let leftElbowX = poses[0].pose.keypoints[7].position.x\n          let leftElbowY = poses[0].pose.keypoints[7].position.y\n          let rightElbowX = poses[0].pose.keypoints[8].position.x\n          let rightElbowY = poses[0].pose.keypoints[8].position.y\n          let leftWristX = poses[0].pose.keypoints[9].position.x\n          let leftWristY = poses[0].pose.keypoints[9].position.y\n          let rightWristX = poses[0].pose.keypoints[10].position.x\n          let rightWristY = poses[0].pose.keypoints[10].position.y\n          let leftHipX = poses[0].pose.keypoints[11].position.x\n          let leftHipY = poses[0].pose.keypoints[11].position.y\n          let rightHipX = poses[0].pose.keypoints[12].position.x\n          let rightHipY = poses[0].pose.keypoints[12].position.y\n          let leftKneeX = poses[0].pose.keypoints[13].position.x\n          let leftKneeY = poses[0].pose.keypoints[13].position.y\n          let rightKneeX = poses[0].pose.keypoints[14].position.x\n          let rightKneeY = poses[0].pose.keypoints[14].position.y\n          let leftAnkleX = poses[0].pose.keypoints[15].position.x\n          let leftAnkleY = poses[0].pose.keypoints[15].position.y\n          let rightAnkleX = poses[0].pose.keypoints[16].position.x\n          let rightAnkleY = poses[0].pose.keypoints[16].position.y\n\n          noseX = p.lerp(noseX, nX, 0.5)\n          noseY = p.lerp(noseY, nY, 0.5)\n          lShoulderX = p.lerp(lShoulderX, leftShoulderX, 0.5)\n          lShoulderY = p.lerp(lShoulderY, leftShoulderY, 0.5)\n          rShoulderX = p.lerp(rShoulderX, rightShoulderX, 0.5)\n          rShoulderY = p.lerp(rShoulderY, rightShoulderY, 0.5)\n          lElbowX = p.lerp(lElbowX, leftElbowX, 0.5)\n          lElbowY = p.lerp(lElbowY, leftElbowY, 0.5)\n          rElbowX = p.lerp(rElbowX, rightElbowX, 0.5)\n          rElbowY = p.lerp(rElbowY, rightElbowY, 0.5)\n          lWristX = p.lerp(lWristX, leftWristX, 0.5)\n          lWristY = p.lerp(lWristY, leftWristY, 0.5)\n          rWristX = p.lerp(rWristX, rightWristX, 0.5)\n          rWristY = p.lerp(rWristY, rightWristY, 0.5)\n          lHipX = p.lerp(lHipX, leftHipX, 0.5)\n          lHipY = p.lerp(lHipY, leftHipY, 0.5)\n          rHipX = p.lerp(rHipX, rightHipX, 0.5)\n          rHipY = p.lerp(rHipY, rightHipY, 0.5)\n          lKneeX = p.lerp(lKneeX, leftKneeX, 0.5)\n          lKneeY = p.lerp(lKneeY, leftKneeY, 0.5)\n          rKneeX = p.lerp(rKneeX, rightKneeX, 0.5)\n          rKneeY = p.lerp(rKneeY, rightKneeY, 0.5)\n          lAnkleX = p.lerp(lAnkleX, leftAnkleX, 0.5)\n          lAnkleY = p.lerp(lAnkleY, leftAnkleY, 0.5)\n          rAnkleX = p.lerp(rAnkleX, rightAnkleX, 0.5)\n          rAnkleY = p.lerp(rAnkleY, rightAnkleY, 0.5)\n\n          // 座標\n          // (leftShoulderX, leftShoulderY)\n          // (leftElbowX, leftElbowY)\n          // (leftWristX, leftWristY)\n\n          let lSE = new Array(2)\n          lSE[0] = leftShoulderX - leftElbowX\n          lSE[1] = leftShoulderY - leftShoulderY\n          let lWE = new Array(2)\n          lWE[0] = leftWristX - leftElbowX\n          lWE[1] = leftWristY - leftElbowY\n\n          let lSEWE = lSE[0] * lWE[0] + lSE[1] * lWE[1]\n          let lSEn = lSE[0] * lSE[0] + lSE[1] * lSE[1]\n          let lWEn = lWE[0] * lWE[0] + lWE[1] * lWE[1]\n          let radian = Math.acos(lSEWE / Math.sqrt(lSEn * lWEn))\n          let angle = (radian * 180) / Math.PI // 結果（ラジアンから角度に変換）\n\n          console.log(angle)\n          if (angle >= 100) {\n            should_count = true\n          } else if (angle <= 70 && should_count) {\n            count += 1\n            should_count = false\n          }\n        }\n      }\n\n      p.modelReady = () => {\n        // console.log('model ready')\n      }\n\n      // setup後に繰り返し実行される処理（フレーム単位）\n      p.draw = () => {\n        p.background(220)\n\n        // カメラからの映像は一旦getしてイメージとして扱う方が軽量\n        let img = video.get()\n        p.image(img, 0, 0, p.width, p.height)\n\n        p.fill(245, 222, 179)\n        p.ellipse(noseX, noseY, 20)\n        p.ellipse(lShoulderX, lShoulderY, 20)\n        p.ellipse(rShoulderX, rShoulderY, 20)\n        p.ellipse(lElbowX, lElbowY, 20)\n        p.ellipse(rElbowX, rElbowY, 20)\n        p.ellipse(lWristX, lWristY, 20)\n        p.ellipse(rWristX, rWristY, 20)\n        p.ellipse(lHipX, lHipY, 20)\n        p.ellipse(rHipX, rHipY, 20)\n        p.ellipse(lKneeX, lKneeY, 20)\n        p.ellipse(rKneeX, rKneeY, 20)\n        p.ellipse(lAnkleX, lAnkleY, 20)\n        p.ellipse(rAnkleX, rAnkleY, 20)\n\n        p.strokeWeight(5)\n        p.stroke(255, 127, 80)\n        p.line(lShoulderX, lShoulderY, rShoulderX, rShoulderY)\n        p.line(lShoulderX, lShoulderY, lElbowX, lElbowY)\n        p.line(lElbowX, lElbowY, lWristX, lWristY)\n        p.line(rShoulderX, rShoulderY, rElbowX, rElbowY)\n        p.line(rElbowX, rElbowY, rWristX, rWristY)\n        p.line(lShoulderX, lShoulderY, lHipX, lHipY)\n        p.line(lHipX, lHipY, lKneeX, lKneeY)\n        p.line(lKneeX, lKneeY, lAnkleX, lAnkleY)\n        p.line(rShoulderX, rShoulderY, rHipX, rHipY)\n        p.line(rHipX, rHipY, rKneeX, rKneeY)\n        p.line(rKneeX, rKneeY, rAnkleX, rAnkleY)\n        p.line(lHipX, lHipY, rHipX, rHipY)\n\n        // header\n        countCanvas.background(0, 0, 0, 0.8)\n        countCanvas.noStroke()\n        p.image(countCanvas, 0, 0, 400)\n\n        // count\n        p.fill(255, 127, 80)\n        p.text('count : ' + count, 50, 60)\n        p.textSize(60)\n      }\n    }\n    return (\n      <div>\n        <P5Wrapper sketch={push_up} />\n      </div>\n    )\n  }\n}\n\nPushUp.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { setCurrentUser })(PushUp)\n"]},"metadata":{},"sourceType":"module"}