{"ast":null,"code":"var _jsxFileName = \"/Users/idetaisei/dev/fitness_counter/client/src/UpdateProfile.js\";\nimport React, { Component, createRef } from 'react';\nimport Nav from './components/Nav';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './actions/authActions';\nimport DefaultImg from './DefaultProfile.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateProfile extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault(); // 送信ボタンがクリックされたときにページが再読み込みされないようにする\n\n      const userData = {\n        profile_image: this.state.plofile_image,\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password\n      }; // コンポーネント内でリダイレクトを処理するため、this.props.historyをパラメーターとして渡す必要はない\n\n      this.props.loginUser(userData);\n    };\n\n    this.state = {\n      plofile_image: '',\n      name: '',\n      email: '',\n      birthday: '',\n      errors: {}\n    };\n  } // 値の更新\n\n\n  render() {\n    const uploadedImage = /*#__PURE__*/createRef(null);\n    const imageUploader = /*#__PURE__*/createRef(null);\n    const {\n      user\n    } = this.props.auth;\n\n    const handleImageUpload = e => {\n      const [file] = e.target.files;\n\n      if (file) {\n        const reader = new FileReader();\n        const {\n          current\n        } = uploadedImage;\n        current.file = file;\n\n        reader.onload = e => {\n          current.src = e.target.result;\n        };\n\n        reader.readAsDataURL(file);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '4rem'\n          },\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col s8 offset-s2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col s12\",\n              style: {\n                paddingBottom: '11.250px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Your plofile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col s12\",\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleImageUpload,\n                ref: imageUploader,\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '130px',\n                  width: '130px',\n                  border: '3px solid #ff5722',\n                  borderRadius: '50%',\n                  cursor: 'pointer',\n                  marginBottom: '20px'\n                },\n                onClick: () => imageUploader.current.click(),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: DefaultImg,\n                  ref: uploadedImage,\n                  style: {\n                    width: '100%',\n                    height: '100%',\n                    position: 'acsolute',\n                    borderRadius: '50%'\n                  },\n                  alt: \"profile img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field col s12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons left\",\n                  children: \"person\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), \"Name\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field col s12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons left\",\n                  children: \"mail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), \"Email\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field col s12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"birthday\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons left\",\n                  children: \"event_note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), \"Birthday\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col s12\",\n              style: {\n                paddingLeft: '11.250px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  width: '150px',\n                  borderRadius: '3px',\n                  letterSpacing: '1.5px',\n                  marginTop: '1rem'\n                },\n                type: \"submit\",\n                className: \"btn btn-large waves-effect waves-light hoverable deep-orange\",\n                children: \"UPDATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nUpdateProfile.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentUser\n})(UpdateProfile);","map":{"version":3,"sources":["/Users/idetaisei/dev/fitness_counter/client/src/UpdateProfile.js"],"names":["React","Component","createRef","Nav","PropTypes","connect","setCurrentUser","DefaultImg","UpdateProfile","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","profile_image","state","plofile_image","name","email","password","props","loginUser","birthday","errors","render","uploadedImage","imageUploader","user","auth","handleImageUpload","file","files","reader","FileReader","current","onload","src","result","readAsDataURL","marginTop","paddingBottom","display","flexDirection","alignItems","justifyContent","height","width","border","borderRadius","cursor","marginBottom","click","position","paddingLeft","letterSpacing","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from 'react'\nimport Nav from './components/Nav'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { setCurrentUser } from './actions/authActions'\nimport DefaultImg from './DefaultProfile.png'\n\nclass UpdateProfile extends Component {\n  constructor() {\n    super()\n    this.state = {\n      plofile_image: '',\n      name: '',\n      email: '',\n      birthday: '',\n      errors: {},\n    }\n  }\n\n  // 値の更新\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault() // 送信ボタンがクリックされたときにページが再読み込みされないようにする\n\n    const userData = {\n      profile_image: this.state.plofile_image,\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n    }\n    // コンポーネント内でリダイレクトを処理するため、this.props.historyをパラメーターとして渡す必要はない\n    this.props.loginUser(userData)\n  }\n\n  render() {\n    const uploadedImage = createRef(null)\n    const imageUploader = createRef(null)\n    const { user } = this.props.auth\n\n    const handleImageUpload = (e) => {\n      const [file] = e.target.files\n      if (file) {\n        const reader = new FileReader()\n        const { current } = uploadedImage\n        current.file = file\n        reader.onload = (e) => {\n          current.src = e.target.result\n        }\n        reader.readAsDataURL(file)\n      }\n    }\n\n    return (\n      <div>\n        <Nav />\n        <div className=\"container\">\n          <div style={{ marginTop: '4rem' }} className=\"row\">\n            <div className=\"col s8 offset-s2\">\n              <div className=\"col s12\" style={{ paddingBottom: '11.250px' }}>\n                <h4>\n                  <b>Your plofile</b>\n                </h4>\n              </div>\n              {/* profile img */}\n              <div\n                className=\"col s12\"\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleImageUpload}\n                  ref={imageUploader}\n                  style={{\n                    display: 'none',\n                  }}\n                />\n                <div\n                  style={{\n                    height: '130px',\n                    width: '130px',\n                    border: '3px solid #ff5722',\n                    borderRadius: '50%',\n                    cursor: 'pointer',\n                    marginBottom: '20px',\n                  }}\n                  onClick={() => imageUploader.current.click()}\n                >\n                  <img\n                    src={DefaultImg}\n                    ref={uploadedImage}\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      position: 'acsolute',\n                      borderRadius: '50%',\n                    }}\n                    alt=\"profile img\"\n                  />\n                </div>\n              </div>\n              {/* name */}\n              <div className=\"input-field col s12\">\n                <input type=\"text\" defaultValue={user.name}></input>\n                <label htmlFor=\"name\">\n                  <i className=\"material-icons left\">person</i>Name\n                </label>\n              </div>\n              {/* email */}\n              <div className=\"input-field col s12\">\n                <input type=\"text\" defaultValue={user.email} />\n                <label htmlFor=\"email\">\n                  <i className=\"material-icons left\">mail</i>Email\n                </label>\n              </div>\n              {/* birthday */}\n              <div className=\"input-field col s12\">\n                <input type=\"text\" />\n                <label htmlFor=\"birthday\">\n                  <i className=\"material-icons left\">event_note</i>Birthday\n                </label>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: '11.250px' }}>\n                <button\n                  style={{\n                    width: '150px',\n                    borderRadius: '3px',\n                    letterSpacing: '1.5px',\n                    marginTop: '1rem',\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable deep-orange\"\n                >\n                  UPDATE\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nUpdateProfile.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { setCurrentUser })(UpdateProfile)\n"]},"metadata":{},"sourceType":"module"}