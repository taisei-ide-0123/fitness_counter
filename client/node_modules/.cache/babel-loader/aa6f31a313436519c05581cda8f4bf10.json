{"ast":null,"code":"var _jsxFileName = \"/Users/idetaisei/fitness_counter/client/src/sketches/Squat.js\";\nimport React, { Component } from 'react';\nimport ml5 from 'ml5';\nimport P5Wrapper from 'react-p5-wrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Squat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      event: 'squat',\n      count: '',\n      date: ''\n    };\n  }\n\n  render() {\n    const squat = p => {\n      let video;\n      let poseNet;\n      let button;\n      let count = 0;\n      let countCanvas;\n      let should_count = true;\n      let noseX = 0;\n      let noseY = 0;\n      let lShoulderX = 0;\n      let lShoulderY = 0;\n      let rShoulderX = 0;\n      let rShoulderY = 0;\n      let lElbowX = 0;\n      let lElbowY = 0;\n      let rElbowX = 0;\n      let rElbowY = 0;\n      let lWristX = 0;\n      let lWristY = 0;\n      let rWristX = 0;\n      let rWristY = 0;\n      let lHipX = 0;\n      let lHipY = 0;\n      let rHipX = 0;\n      let rHipY = 0;\n      let lKneeX = 0;\n      let lKneeY = 0;\n      let rKneeX = 0;\n      let rKneeY = 0;\n      let lAnkleX = 0;\n      let lAnkleY = 0;\n      let rAnkleX = 0;\n      let rAnkleY = 0; // text(s, x, y, w, h)\n      // 最初の1回だけ実装される処理\n\n      p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight);\n        countCanvas = p.createGraphics(p.windowWidth, p.windowHeight * 0.1);\n        video = p.createCapture(p.VIDEO);\n        video.size(p.windowWidth, p.windowHeight);\n        video.hide(); // 映像を一つにする\n\n        poseNet = ml5.poseNet(video, p.modelReady);\n        poseNet.on('pose', p.gotPoses); // ポーズが検出された時に結果を返すイベント\n\n        button = p.createButton('save', [count]);\n        button.position(0, 0);\n        button.mousePressed(); // まんまるボタン\n\n        button.style('width', '100px');\n        button.style('height', '100px');\n        button.style('border-radius', '25px'); // クリックした時の枠線を非表示化\n\n        button.style('outline', 'none');\n      };\n\n      p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\n      };\n\n      p.gotPoses = poses => {\n        // console.log(poses)\n        if (poses.length > 0) {\n          let nX = poses[0].pose.keypoints[0].position.x;\n          let nY = poses[0].pose.keypoints[0].position.y;\n          let leftShoulderX = poses[0].pose.keypoints[5].position.x;\n          let leftShoulderY = poses[0].pose.keypoints[5].position.y;\n          let rightShoulderX = poses[0].pose.keypoints[6].position.x;\n          let rightShoulderY = poses[0].pose.keypoints[6].position.y;\n          let leftElbowX = poses[0].pose.keypoints[7].position.x;\n          let leftElbowY = poses[0].pose.keypoints[7].position.y;\n          let rightElbowX = poses[0].pose.keypoints[8].position.x;\n          let rightElbowY = poses[0].pose.keypoints[8].position.y;\n          let leftWristX = poses[0].pose.keypoints[9].position.x;\n          let leftWristY = poses[0].pose.keypoints[9].position.y;\n          let rightWristX = poses[0].pose.keypoints[10].position.x;\n          let rightWristY = poses[0].pose.keypoints[10].position.y;\n          let leftHipX = poses[0].pose.keypoints[11].position.x;\n          let leftHipY = poses[0].pose.keypoints[11].position.y;\n          let rightHipX = poses[0].pose.keypoints[12].position.x;\n          let rightHipY = poses[0].pose.keypoints[12].position.y;\n          let leftKneeX = poses[0].pose.keypoints[13].position.x;\n          let leftKneeY = poses[0].pose.keypoints[13].position.y;\n          let rightKneeX = poses[0].pose.keypoints[14].position.x;\n          let rightKneeY = poses[0].pose.keypoints[14].position.y;\n          let leftAnkleX = poses[0].pose.keypoints[15].position.x;\n          let leftAnkleY = poses[0].pose.keypoints[15].position.y;\n          let rightAnkleX = poses[0].pose.keypoints[16].position.x;\n          let rightAnkleY = poses[0].pose.keypoints[16].position.y;\n          noseX = p.lerp(noseX, nX, 0.5);\n          noseY = p.lerp(noseY, nY, 0.5);\n          lShoulderX = p.lerp(lShoulderX, leftShoulderX, 0.5);\n          lShoulderY = p.lerp(lShoulderY, leftShoulderY, 0.5);\n          rShoulderX = p.lerp(rShoulderX, rightShoulderX, 0.5);\n          rShoulderY = p.lerp(rShoulderY, rightShoulderY, 0.5);\n          lElbowX = p.lerp(lElbowX, leftElbowX, 0.5);\n          lElbowY = p.lerp(lElbowY, leftElbowY, 0.5);\n          rElbowX = p.lerp(rElbowX, rightElbowX, 0.5);\n          rElbowY = p.lerp(rElbowY, rightElbowY, 0.5);\n          lWristX = p.lerp(lWristX, leftWristX, 0.5);\n          lWristY = p.lerp(lWristY, leftWristY, 0.5);\n          rWristX = p.lerp(rWristX, rightWristX, 0.5);\n          rWristY = p.lerp(rWristY, rightWristY, 0.5);\n          lHipX = p.lerp(lHipX, leftHipX, 0.5);\n          lHipY = p.lerp(lHipY, leftHipY, 0.5);\n          rHipX = p.lerp(rHipX, rightHipX, 0.5);\n          rHipY = p.lerp(rHipY, rightHipY, 0.5);\n          lKneeX = p.lerp(lKneeX, leftKneeX, 0.5);\n          lKneeY = p.lerp(lKneeY, leftKneeY, 0.5);\n          rKneeX = p.lerp(rKneeX, rightKneeX, 0.5);\n          rKneeY = p.lerp(rKneeY, rightKneeY, 0.5);\n          lAnkleX = p.lerp(lAnkleX, leftAnkleX, 0.5);\n          lAnkleY = p.lerp(lAnkleY, leftAnkleY, 0.5);\n          rAnkleX = p.lerp(rAnkleX, rightAnkleX, 0.5);\n          rAnkleY = p.lerp(rAnkleY, rightAnkleY, 0.5); // console.log(nY)\n          // 座標\n          // (leftHipX, leftHipY)\n          // (leftKneeX, leftKneeY)\n          // (leftAnkleX, leftAnkleY)\n\n          let lHK = new Array(2);\n          lHK[0] = leftHipX - leftKneeX; // ba[0]\n\n          lHK[1] = leftHipY - leftKneeY; // ba[1]\n\n          let lAK = new Array(2);\n          lAK[0] = leftAnkleX - leftKneeX; // bc[0]\n\n          lAK[1] = leftAnkleY - leftKneeY; // bc[1]\n\n          let lHKAK = lHK[0] * lAK[0] + lHK[1] * lAK[1];\n          let lHKn = lHK[0] * lHK[0] + lHK[1] * lHK[1];\n          let lAKn = lAK[0] * lAK[0] + lAK[1] * lAK[1];\n          let radian = Math.acos(lHKAK / Math.sqrt(lHKn * lAKn));\n          let angle = radian * 180 / Math.PI; // 結果（ラジアンから角度に変換）\n          // console.log(angle)\n\n          if (angle >= 170) {\n            should_count = true;\n          } else if (angle <= 140 && should_count) {\n            count += 1;\n            should_count = false;\n            return {\n              count: count\n            };\n          }\n        }\n      };\n\n      p.modelReady = () => {// console.log('model ready')\n      }; // setup後に繰り返し実行される処理（フレーム単位）\n\n\n      p.draw = () => {\n        p.background(220); // カメラからの映像は一旦getしてイメージとして扱う方が軽量\n\n        let img = video.get();\n        p.image(img, 0, 0, p.width, p.height);\n        p.fill(245, 222, 179);\n        p.ellipse(noseX, noseY, 20);\n        p.ellipse(lShoulderX, lShoulderY, 20);\n        p.ellipse(rShoulderX, rShoulderY, 20);\n        p.ellipse(lElbowX, lElbowY, 20);\n        p.ellipse(rElbowX, rElbowY, 20);\n        p.ellipse(lWristX, lWristY, 20);\n        p.ellipse(rWristX, rWristY, 20);\n        p.ellipse(lHipX, lHipY, 20);\n        p.ellipse(rHipX, rHipY, 20);\n        p.ellipse(lKneeX, lKneeY, 20);\n        p.ellipse(rKneeX, rKneeY, 20);\n        p.ellipse(lAnkleX, lAnkleY, 20);\n        p.ellipse(rAnkleX, rAnkleY, 20);\n        p.strokeWeight(5);\n        p.stroke(255, 127, 80);\n        p.line(lShoulderX, lShoulderY, rShoulderX, rShoulderY);\n        p.line(lShoulderX, lShoulderY, lElbowX, lElbowY);\n        p.line(lElbowX, lElbowY, lWristX, lWristY);\n        p.line(rShoulderX, rShoulderY, rElbowX, rElbowY);\n        p.line(rElbowX, rElbowY, rWristX, rWristY);\n        p.line(lShoulderX, lShoulderY, lHipX, lHipY);\n        p.line(lHipX, lHipY, lKneeX, lKneeY);\n        p.line(lKneeX, lKneeY, lAnkleX, lAnkleY);\n        p.line(rShoulderX, rShoulderY, rHipX, rHipY);\n        p.line(rHipX, rHipY, rKneeX, rKneeY);\n        p.line(rKneeX, rKneeY, rAnkleX, rAnkleY);\n        p.line(lHipX, lHipY, rHipX, rHipY); // header\n\n        countCanvas.background(0, 0, 0, 0.8);\n        countCanvas.noStroke();\n        p.image(countCanvas, 0, 0, 400); // count\n\n        p.fill(255, 127, 80);\n        p.text('count : ' + count, 50, 60);\n        p.textSize(60);\n      };\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(P5Wrapper, {\n        sketch: squat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Squat;","map":{"version":3,"sources":["/Users/idetaisei/fitness_counter/client/src/sketches/Squat.js"],"names":["React","Component","ml5","P5Wrapper","Squat","constructor","props","state","user","event","count","date","render","squat","p","video","poseNet","button","countCanvas","should_count","noseX","noseY","lShoulderX","lShoulderY","rShoulderX","rShoulderY","lElbowX","lElbowY","rElbowX","rElbowY","lWristX","lWristY","rWristX","rWristY","lHipX","lHipY","rHipX","rHipY","lKneeX","lKneeY","rKneeX","rKneeY","lAnkleX","lAnkleY","rAnkleX","rAnkleY","setup","createCanvas","windowWidth","windowHeight","createGraphics","createCapture","VIDEO","size","hide","modelReady","on","gotPoses","createButton","position","mousePressed","style","windowResized","resizeCanvas","poses","length","nX","pose","keypoints","x","nY","y","leftShoulderX","leftShoulderY","rightShoulderX","rightShoulderY","leftElbowX","leftElbowY","rightElbowX","rightElbowY","leftWristX","leftWristY","rightWristX","rightWristY","leftHipX","leftHipY","rightHipX","rightHipY","leftKneeX","leftKneeY","rightKneeX","rightKneeY","leftAnkleX","leftAnkleY","rightAnkleX","rightAnkleY","lerp","lHK","Array","lAK","lHKAK","lHKn","lAKn","radian","Math","acos","sqrt","angle","PI","draw","background","img","get","image","width","height","fill","ellipse","strokeWeight","stroke","line","noStroke","text","textSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ml5 from 'ml5'\nimport P5Wrapper from 'react-p5-wrapper'\n\nclass Squat extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: '',\n      event: 'squat',\n      count: '',\n      date: '',\n    }\n  }\n  render() {\n    const squat = (p) => {\n      let video\n      let poseNet\n      let button\n      let count = 0\n      let countCanvas\n      let should_count = true\n      let noseX = 0\n      let noseY = 0\n      let lShoulderX = 0\n      let lShoulderY = 0\n      let rShoulderX = 0\n      let rShoulderY = 0\n      let lElbowX = 0\n      let lElbowY = 0\n      let rElbowX = 0\n      let rElbowY = 0\n      let lWristX = 0\n      let lWristY = 0\n      let rWristX = 0\n      let rWristY = 0\n      let lHipX = 0\n      let lHipY = 0\n      let rHipX = 0\n      let rHipY = 0\n      let lKneeX = 0\n      let lKneeY = 0\n      let rKneeX = 0\n      let rKneeY = 0\n      let lAnkleX = 0\n      let lAnkleY = 0\n      let rAnkleX = 0\n      let rAnkleY = 0\n\n      // text(s, x, y, w, h)\n\n      // 最初の1回だけ実装される処理\n      p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight)\n        countCanvas = p.createGraphics(p.windowWidth, p.windowHeight * 0.1)\n        video = p.createCapture(p.VIDEO)\n        video.size(p.windowWidth, p.windowHeight)\n        video.hide() // 映像を一つにする\n        poseNet = ml5.poseNet(video, p.modelReady)\n        poseNet.on('pose', p.gotPoses) // ポーズが検出された時に結果を返すイベント\n        button = p.createButton('save', [count])\n        button.position(0, 0)\n        button.mousePressed()\n        // まんまるボタン\n        button.style('width', '100px')\n        button.style('height', '100px')\n        button.style('border-radius', '25px')\n        // クリックした時の枠線を非表示化\n        button.style('outline', 'none')\n      }\n\n      p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight)\n      }\n\n      p.gotPoses = (poses) => {\n        // console.log(poses)\n        if (poses.length > 0) {\n          let nX = poses[0].pose.keypoints[0].position.x\n          let nY = poses[0].pose.keypoints[0].position.y\n          let leftShoulderX = poses[0].pose.keypoints[5].position.x\n          let leftShoulderY = poses[0].pose.keypoints[5].position.y\n          let rightShoulderX = poses[0].pose.keypoints[6].position.x\n          let rightShoulderY = poses[0].pose.keypoints[6].position.y\n          let leftElbowX = poses[0].pose.keypoints[7].position.x\n          let leftElbowY = poses[0].pose.keypoints[7].position.y\n          let rightElbowX = poses[0].pose.keypoints[8].position.x\n          let rightElbowY = poses[0].pose.keypoints[8].position.y\n          let leftWristX = poses[0].pose.keypoints[9].position.x\n          let leftWristY = poses[0].pose.keypoints[9].position.y\n          let rightWristX = poses[0].pose.keypoints[10].position.x\n          let rightWristY = poses[0].pose.keypoints[10].position.y\n          let leftHipX = poses[0].pose.keypoints[11].position.x\n          let leftHipY = poses[0].pose.keypoints[11].position.y\n          let rightHipX = poses[0].pose.keypoints[12].position.x\n          let rightHipY = poses[0].pose.keypoints[12].position.y\n          let leftKneeX = poses[0].pose.keypoints[13].position.x\n          let leftKneeY = poses[0].pose.keypoints[13].position.y\n          let rightKneeX = poses[0].pose.keypoints[14].position.x\n          let rightKneeY = poses[0].pose.keypoints[14].position.y\n          let leftAnkleX = poses[0].pose.keypoints[15].position.x\n          let leftAnkleY = poses[0].pose.keypoints[15].position.y\n          let rightAnkleX = poses[0].pose.keypoints[16].position.x\n          let rightAnkleY = poses[0].pose.keypoints[16].position.y\n\n          noseX = p.lerp(noseX, nX, 0.5)\n          noseY = p.lerp(noseY, nY, 0.5)\n          lShoulderX = p.lerp(lShoulderX, leftShoulderX, 0.5)\n          lShoulderY = p.lerp(lShoulderY, leftShoulderY, 0.5)\n          rShoulderX = p.lerp(rShoulderX, rightShoulderX, 0.5)\n          rShoulderY = p.lerp(rShoulderY, rightShoulderY, 0.5)\n          lElbowX = p.lerp(lElbowX, leftElbowX, 0.5)\n          lElbowY = p.lerp(lElbowY, leftElbowY, 0.5)\n          rElbowX = p.lerp(rElbowX, rightElbowX, 0.5)\n          rElbowY = p.lerp(rElbowY, rightElbowY, 0.5)\n          lWristX = p.lerp(lWristX, leftWristX, 0.5)\n          lWristY = p.lerp(lWristY, leftWristY, 0.5)\n          rWristX = p.lerp(rWristX, rightWristX, 0.5)\n          rWristY = p.lerp(rWristY, rightWristY, 0.5)\n          lHipX = p.lerp(lHipX, leftHipX, 0.5)\n          lHipY = p.lerp(lHipY, leftHipY, 0.5)\n          rHipX = p.lerp(rHipX, rightHipX, 0.5)\n          rHipY = p.lerp(rHipY, rightHipY, 0.5)\n          lKneeX = p.lerp(lKneeX, leftKneeX, 0.5)\n          lKneeY = p.lerp(lKneeY, leftKneeY, 0.5)\n          rKneeX = p.lerp(rKneeX, rightKneeX, 0.5)\n          rKneeY = p.lerp(rKneeY, rightKneeY, 0.5)\n          lAnkleX = p.lerp(lAnkleX, leftAnkleX, 0.5)\n          lAnkleY = p.lerp(lAnkleY, leftAnkleY, 0.5)\n          rAnkleX = p.lerp(rAnkleX, rightAnkleX, 0.5)\n          rAnkleY = p.lerp(rAnkleY, rightAnkleY, 0.5)\n\n          // console.log(nY)\n          // 座標\n          // (leftHipX, leftHipY)\n          // (leftKneeX, leftKneeY)\n          // (leftAnkleX, leftAnkleY)\n\n          let lHK = new Array(2)\n          lHK[0] = leftHipX - leftKneeX // ba[0]\n          lHK[1] = leftHipY - leftKneeY // ba[1]\n          let lAK = new Array(2)\n          lAK[0] = leftAnkleX - leftKneeX // bc[0]\n          lAK[1] = leftAnkleY - leftKneeY // bc[1]\n\n          let lHKAK = lHK[0] * lAK[0] + lHK[1] * lAK[1]\n          let lHKn = lHK[0] * lHK[0] + lHK[1] * lHK[1]\n          let lAKn = lAK[0] * lAK[0] + lAK[1] * lAK[1]\n          let radian = Math.acos(lHKAK / Math.sqrt(lHKn * lAKn))\n          let angle = (radian * 180) / Math.PI // 結果（ラジアンから角度に変換）\n\n          // console.log(angle)\n          if (angle >= 170) {\n            should_count = true\n          } else if (angle <= 140 && should_count) {\n            count += 1\n            should_count = false\n\n            return { count: count }\n          }\n        }\n      }\n\n      p.modelReady = () => {\n        // console.log('model ready')\n      }\n\n      // setup後に繰り返し実行される処理（フレーム単位）\n      p.draw = () => {\n        p.background(220)\n\n        // カメラからの映像は一旦getしてイメージとして扱う方が軽量\n        let img = video.get()\n        p.image(img, 0, 0, p.width, p.height)\n\n        p.fill(245, 222, 179)\n        p.ellipse(noseX, noseY, 20)\n        p.ellipse(lShoulderX, lShoulderY, 20)\n        p.ellipse(rShoulderX, rShoulderY, 20)\n        p.ellipse(lElbowX, lElbowY, 20)\n        p.ellipse(rElbowX, rElbowY, 20)\n        p.ellipse(lWristX, lWristY, 20)\n        p.ellipse(rWristX, rWristY, 20)\n        p.ellipse(lHipX, lHipY, 20)\n        p.ellipse(rHipX, rHipY, 20)\n        p.ellipse(lKneeX, lKneeY, 20)\n        p.ellipse(rKneeX, rKneeY, 20)\n        p.ellipse(lAnkleX, lAnkleY, 20)\n        p.ellipse(rAnkleX, rAnkleY, 20)\n\n        p.strokeWeight(5)\n        p.stroke(255, 127, 80)\n        p.line(lShoulderX, lShoulderY, rShoulderX, rShoulderY)\n        p.line(lShoulderX, lShoulderY, lElbowX, lElbowY)\n        p.line(lElbowX, lElbowY, lWristX, lWristY)\n        p.line(rShoulderX, rShoulderY, rElbowX, rElbowY)\n        p.line(rElbowX, rElbowY, rWristX, rWristY)\n        p.line(lShoulderX, lShoulderY, lHipX, lHipY)\n        p.line(lHipX, lHipY, lKneeX, lKneeY)\n        p.line(lKneeX, lKneeY, lAnkleX, lAnkleY)\n        p.line(rShoulderX, rShoulderY, rHipX, rHipY)\n        p.line(rHipX, rHipY, rKneeX, rKneeY)\n        p.line(rKneeX, rKneeY, rAnkleX, rAnkleY)\n        p.line(lHipX, lHipY, rHipX, rHipY)\n\n        // header\n        countCanvas.background(0, 0, 0, 0.8)\n        countCanvas.noStroke()\n        p.image(countCanvas, 0, 0, 400)\n\n        // count\n        p.fill(255, 127, 80)\n        p.text('count : ' + count, 50, 60)\n        p.textSize(60)\n      }\n    }\n\n    return (\n      <div>\n        <P5Wrapper sketch={squat} />\n      </div>\n    )\n  }\n}\nexport default Squat\n"]},"metadata":{},"sourceType":"module"}