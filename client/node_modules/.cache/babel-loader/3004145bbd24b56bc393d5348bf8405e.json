{"ast":null,"code":"import axios from'axios';import setAuthToken from'../utils/setAuthToken';import jwt_decode from'jwt-decode';import{GET_ERRORS,SET_CURRENT_USER,USER_LOADING}from'./types';// Register User\nexport var registerUser=function registerUser(userData,history){return function(dispatch){axios.post('/api/users/register',userData).then(function(res){return history.push('/login');})// re-direct to login on successful register\n.catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Login - get user token\nexport var loginUser=function loginUser(userData){return function(dispatch){axios.post('/api/users/login',userData).then(function(res){// Save to localStorage\n// Set token to localStorage\nvar token=res.data.token;localStorage.setItem('jwtToken',token);// Set token to Auth header\nsetAuthToken(token);// Decode token to get user data\nvar decoded=jwt_decode(token);// Set current user\ndispatch(setCurrentUser(decoded));}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Set logged in user\nexport var setCurrentUser=function setCurrentUser(decoded){return{type:SET_CURRENT_USER,payload:decoded};};// User loading\nexport var setUserLoading=function setUserLoading(){return{type:USER_LOADING};};// Log user out\nexport var logoutUser=function logoutUser(){return function(dispatch){// Remove token from local storage\nlocalStorage.removeItem('jwtToken');// Remove auth header for future requests\nsetAuthToken(false);// Set current user to empty object {} which will set isAuthenticated to false\ndispatch(setCurrentUser({}));};};","map":{"version":3,"sources":["/Users/idetaisei/fitness_counter/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,OAASC,UAAT,CAAqBC,gBAArB,CAAuCC,YAAvC,KAA2D,SAA3D,CAEA;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAAWC,OAAX,QAAuB,UAACC,QAAD,CAAc,CAC/DT,KAAK,CACFU,IADH,CACQ,qBADR,CAC+BH,QAD/B,EAEGI,IAFH,CAEQ,SAACC,GAAD,QAASJ,CAAAA,OAAO,CAACK,IAAR,CAAa,QAAb,CAAT,EAFR,CAEyC;AAFzC,CAGGC,KAHH,CAGS,SAACC,GAAD,QACLN,CAAAA,QAAQ,CAAC,CACPO,IAAI,CAAEb,UADC,CAEPc,OAAO,CAAEF,GAAG,CAACG,QAAJ,CAAaC,IAFf,CAAD,CADH,EAHT,EASD,CAV2B,EAArB,CAYP;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACb,QAAD,QAAc,UAACE,QAAD,CAAc,CACnDT,KAAK,CACFU,IADH,CACQ,kBADR,CAC4BH,QAD5B,EAEGI,IAFH,CAEQ,SAACC,GAAD,CAAS,CACb;AAEA;AAHa,GAILS,CAAAA,KAJK,CAIKT,GAAG,CAACO,IAJT,CAILE,KAJK,CAKbC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCF,KAAjC,EACA;AACApB,YAAY,CAACoB,KAAD,CAAZ,CACA;AACA,GAAMG,CAAAA,OAAO,CAAGtB,UAAU,CAACmB,KAAD,CAA1B,CACA;AACAZ,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR,CACD,CAdH,EAeGV,KAfH,CAeS,SAACC,GAAD,QACLN,CAAAA,QAAQ,CAAC,CACPO,IAAI,CAAEb,UADC,CAEPc,OAAO,CAAEF,GAAG,CAACG,QAAJ,CAAaC,IAFf,CAAD,CADH,EAfT,EAqBD,CAtBwB,EAAlB,CAwBP;AACA,MAAO,IAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACD,OAAD,CAAa,CACzC,MAAO,CACLR,IAAI,CAAEZ,gBADD,CAELa,OAAO,CAAEO,OAFJ,CAAP,CAID,CALM,CAOP;AACA,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAClC,MAAO,CACLV,IAAI,CAAEX,YADD,CAAP,CAGD,CAJM,CAMP;AACA,MAAO,IAAMsB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAM,UAAClB,QAAD,CAAc,CAC5C;AACAa,YAAY,CAACM,UAAb,CAAwB,UAAxB,EACA;AACA3B,YAAY,CAAC,KAAD,CAAZ,CACA;AACAQ,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR,CACD,CAPyB,EAAnB","sourcesContent":["import axios from 'axios'\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode'\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from './types'\n\n// Register User\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    .post('/api/users/register', userData)\n    .then((res) => history.push('/login')) // re-direct to login on successful register\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      }),\n    )\n}\n\n// Login - get user token\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    .post('/api/users/login', userData)\n    .then((res) => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data\n      localStorage.setItem('jwtToken', token)\n      // Set token to Auth header\n      setAuthToken(token)\n      // Decode token to get user data\n      const decoded = jwt_decode(token)\n      // Set current user\n      dispatch(setCurrentUser(decoded))\n    })\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      }),\n    )\n}\n\n// Set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  }\n}\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  }\n}\n\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n  // Remove token from local storage\n  localStorage.removeItem('jwtToken')\n  // Remove auth header for future requests\n  setAuthToken(false)\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}))\n}\n"]},"metadata":{},"sourceType":"module"}