{"ast":null,"code":"var _jsxFileName = \"/Users/idetaisei/dev/fitness_counter/client/src/components/auth/Register.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault(); // 送信ボタンがクリックされたときにページが再読み込みされないようにする\n\n      const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.props.registerUser(newUser, this.props.history);\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  } // 値の更新\n\n\n  render() {\n    const errors = this.state.errors;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.onChange,\n            value: this.state.name,\n            error: errors.name,\n            id: \"name\",\n            type: \"text\",\n            className: classnames('', {\n              invalid: errors.name\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.onChange,\n            value: this.state.email,\n            error: errors.email,\n            id: \"email\",\n            type: \"email\",\n            className: classnames('', {\n              invalid: errors.email\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.onChange,\n            value: this.state.password,\n            error: errors.password,\n            id: \"password\",\n            type: \"password\",\n            className: classnames('', {\n              invalid: errors.password\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.onChange,\n            value: this.state.password2,\n            error: errors.password2,\n            id: \"password2\",\n            type: \"password\",\n            className: classnames('', {\n              invalid: errors.password2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password2\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errors.password2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n} // constructorで型を定義することができないためprop-typesパッケージを使用して定義する。\n\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}; // stateをpropsとして扱うことができる\n// 親コンポーネントからpropsとして引き継がなくても子コンポーネントからすぐに使える\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/Users/idetaisei/dev/fitness_counter/client/src/components/auth/Register.js"],"names":["React","Component","Link","withRouter","PropTypes","connect","registerUser","classnames","Register","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","state","email","password","password2","props","history","errors","componentDidMount","auth","isAuthenticated","push","componentWillReceiveProps","nextProps","render","invalid","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { registerUser } from '../../actions/authActions'\nimport classnames from 'classnames'\n\nclass Register extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {},\n    }\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard')\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      })\n    }\n  }\n\n  // 値の更新\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault() // 送信ボタンがクリックされたときにページが再読み込みされないようにする\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n    }\n    this.props.registerUser(newUser, this.props.history)\n  }\n\n  render() {\n    const errors = this.state.errors\n\n    return (\n      <div className=\"container\">\n        <Link to=\"/\">home</Link>\n        <Link to=\"/login\">Log in</Link>\n\n        <form noValidate onSubmit={this.onSubmit}>\n          <div>\n            <input\n              onChange={this.onChange}\n              value={this.state.name}\n              error={errors.name}\n              id=\"name\"\n              type=\"text\"\n              className={classnames('', {\n                invalid: errors.name,\n              })}\n            />\n            <label htmlFor=\"name\">Name</label>\n            <span>{errors.name}</span>\n          </div>\n          <div>\n            <input\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              className={classnames('', {\n                invalid: errors.email,\n              })}\n            />\n            <label htmlFor=\"email\">Email</label>\n            <span>{errors.email}</span>\n          </div>\n          <div>\n            <input\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              className={classnames('', {\n                invalid: errors.password,\n              })}\n            />\n            <label htmlFor=\"password\">Password</label>\n            <span>{errors.password}</span>\n          </div>\n          <div>\n            <input\n              onChange={this.onChange}\n              value={this.state.password2}\n              error={errors.password2}\n              id=\"password2\"\n              type=\"password\"\n              className={classnames('', {\n                invalid: errors.password2,\n              })}\n            />\n            <label htmlFor=\"password2\">Confirm Password</label>\n            <span>{errors.password2}</span>\n          </div>\n          <div>\n            <button type=\"submit\">Sign up</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n// constructorで型を定義することができないためprop-typesパッケージを使用して定義する。\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n}\n\n// stateをpropsとして扱うことができる\n// 親コンポーネントからpropsとして引き継がなくても子コンポーネントからすぐに使える\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n})\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register))\n"]},"metadata":{},"sourceType":"module"}