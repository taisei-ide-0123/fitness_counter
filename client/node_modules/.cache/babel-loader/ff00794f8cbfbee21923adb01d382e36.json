{"ast":null,"code":"var _jsxFileName = \"/Users/idetaisei/fitness_counter/client/src/Record.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Nav from './components/Nav';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RecordList extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      records: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/counts/').then(response => {// this.setState({ records: response.data })\n      // console.log(response.data)\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  recordList() {\n    return this.state.records.map(currentrecord => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: currentrecord\n      }, currentrecord._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Training Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.recordList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nRecordList.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentUser\n})(RecordList);","map":{"version":3,"sources":["/Users/idetaisei/fitness_counter/client/src/Record.js"],"names":["React","Component","axios","Nav","PropTypes","connect","setCurrentUser","RecordList","constructor","props","console","log","state","records","componentDidMount","get","then","response","catch","error","recordList","map","currentrecord","_id","render","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AACjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SAAKG,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,KAAK,CACFa,GADH,CACO,cADP,EAEGC,IAFH,CAESC,QAAD,IAAc,CAClB;AACA;AACD,KALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,KARH;AASD;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKR,KAAL,CAAWC,OAAX,CAAmBQ,GAAnB,CAAwBC,aAAD,IAAmB;AAC/C,0BAAO,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEA;AAAhB,SAAoCA,aAAa,CAACC,GAAlD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,oBAAQ,KAAKJ,UAAL;AAAR;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA3CgC;;AA8CnCb,UAAU,CAACkB,SAAX,GAAuB;AACrBnB,EAAAA,cAAc,EAAEF,SAAS,CAACsB,IAAV,CAAeC,UADV;AAErBC,EAAAA,IAAI,EAAExB,SAAS,CAACyB,MAAV,CAAiBF;AAFF,CAAvB;;AAKA,MAAMG,eAAe,GAAIlB,KAAD,KAAY;AAClCgB,EAAAA,IAAI,EAAEhB,KAAK,CAACgB;AADsB,CAAZ,CAAxB;;AAIA,eAAevB,OAAO,CAACyB,eAAD,EAAkB;AAAExB,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport Nav from './components/Nav'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { setCurrentUser } from './actions/authActions'\n\nclass RecordList extends Component {\n  constructor(props) {\n    super(props)\n    console.log(props)\n\n    this.state = { records: [] }\n  }\n\n  componentDidMount() {\n    axios\n      .get('/api/counts/')\n      .then((response) => {\n        // this.setState({ records: response.data })\n        // console.log(response.data)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  recordList() {\n    return this.state.records.map((currentrecord) => {\n      return <Record record={currentrecord} key={currentrecord._id} />\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <h3>Training Record</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Event</th>\n              <th>Count</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>{this.recordList()}</tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nRecordList.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { setCurrentUser })(RecordList)\n"]},"metadata":{},"sourceType":"module"}