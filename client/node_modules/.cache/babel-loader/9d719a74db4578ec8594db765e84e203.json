{"ast":null,"code":"import React from'react';import'./App.css';import jwt_decode from'jwt-decode';import setAuthToken from'./utils/setAuthToken';import{setCurrentUser,logoutUser}from'./actions/authActions';import{Provider}from'react-redux';import store from'./store';import Squat from'./Squat';import PushUp from'./PushUp';import PullUp from'./PullUp';import ArmCurl from'./ArmCurl';import DumbbellRaise from'./DumbbellRaise';import Profile from'./Profile';import UpdateProfile from'./UpdateProfile';import Register from'./components/auth/Register';import Login from'./components/auth/Login';import{BrowserRouter as Router,Switch,Route}from'react-router-dom';import PrivateRoute from'./components/private-route/PrivateRoute';import Menu from'./components/Menu/Menu';import Home from'./components/Menu/Home';// トークンをチェックしてユーザーのログインを維持する。\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";if(localStorage.jwtToken){// Set auth token header auth\nvar token=localStorage.jwtToken;setAuthToken(token);// Decode token and get user info and exp\nvar decoded=jwt_decode(token);// Set user and isAuthenticated\nstore.dispatch(setCurrentUser(decoded));// 期限切れのトークンを確認する\nvar currentTime=Date.now()/1000;// ミリ秒単位で取得\nif(decoded.exp<currentTime){// Logout user\nstore.dispatch(logoutUser());// Redirect to login\nwindow.location.href='./login';}}function App(){return/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,component:Home}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/menu\",exact:true,component:Menu}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/squat\",component:Squat}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/push-up\",component:PushUp}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/pull-up\",component:PullUp}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/arm-curl\",component:ArmCurl}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/dumbbell-raise\",component:DumbbellRaise}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/profile\",component:Profile}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/update\",component:UpdateProfile}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/register\",component:Register}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",component:Login})]})})})});}export default App;","map":{"version":3,"sources":["/Users/idetaisei/fitness_counter/client/src/App.js"],"names":["React","jwt_decode","setAuthToken","setCurrentUser","logoutUser","Provider","store","Squat","PushUp","PullUp","ArmCurl","DumbbellRaise","Profile","UpdateProfile","Register","Login","BrowserRouter","Router","Switch","Route","PrivateRoute","Menu","Home","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\nimport jwt_decode from 'jwt-decode'\nimport setAuthToken from './utils/setAuthToken'\nimport { setCurrentUser, logoutUser } from './actions/authActions'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport Squat from './Squat'\nimport PushUp from './PushUp'\nimport PullUp from './PullUp'\nimport ArmCurl from './ArmCurl'\nimport DumbbellRaise from './DumbbellRaise'\n\nimport Profile from './Profile'\nimport UpdateProfile from './UpdateProfile'\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport PrivateRoute from './components/private-route/PrivateRoute'\nimport Menu from './components/Menu/Menu'\nimport Home from './components/Menu/Home'\n\n// トークンをチェックしてユーザーのログインを維持する。\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken\n  setAuthToken(token)\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token)\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded))\n\n  // 期限切れのトークンを確認する\n  const currentTime = Date.now() / 1000 // ミリ秒単位で取得\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser())\n    // Redirect to login\n    window.location.href = './login'\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <PrivateRoute path=\"/menu\" exact component={Menu} />\n            <PrivateRoute path=\"/squat\" component={Squat} />\n            <PrivateRoute path=\"/push-up\" component={PushUp} />\n            <PrivateRoute path=\"/pull-up\" component={PullUp} />\n            <PrivateRoute path=\"/arm-curl\" component={ArmCurl} />\n            <PrivateRoute path=\"/dumbbell-raise\" component={DumbbellRaise} />\n            <PrivateRoute path=\"/profile\" component={Profile} />\n            <PrivateRoute path=\"/update\" component={UpdateProfile} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}